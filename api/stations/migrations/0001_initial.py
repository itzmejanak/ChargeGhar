# Generated by Django 5.2.5 on 2025-09-06 19:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media', '0001_initial'),
        ('rentals', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('station_name', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=255, unique=True)),
                ('imei', models.CharField(max_length=255, unique=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('address', models.CharField(max_length=255)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('total_slots', models.IntegerField()),
                ('status', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('MAINTENANCE', 'Maintenance')], default='OFFLINE', max_length=50)),
                ('is_maintenance', models.BooleanField(default=False)),
                ('hardware_info', models.JSONField(default=dict)),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Station',
                'verbose_name_plural': 'Stations',
                'db_table': 'stations',
            },
        ),
        migrations.CreateModel(
            name='StationAmenity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Station Amenity',
                'verbose_name_plural': 'Station Amenities',
                'db_table': 'station_amenities',
            },
        ),
        migrations.CreateModel(
            name='StationIssue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issue_type', models.CharField(choices=[('OFFLINE', 'Offline'), ('DAMAGED', 'Damaged'), ('DIRTY', 'Dirty'), ('LOCATION_WRONG', 'Location Wrong'), ('SLOT_ERROR', 'Slot Error'), ('AMENITY_ISSUE', 'Amenity Issue')], max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('images', models.JSONField(default=list)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=50)),
                ('status', models.CharField(choices=[('REPORTED', 'Reported'), ('ACKNOWLEDGED', 'Acknowledged'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved')], default='REPORTED', max_length=50)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_station_issues', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='stations.station')),
            ],
            options={
                'verbose_name': 'Station Issue',
                'verbose_name_plural': 'Station Issues',
                'db_table': 'station_issues',
            },
        ),
        migrations.CreateModel(
            name='StationMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media_type', models.CharField(choices=[('IMAGE', 'Image'), ('VIDEO', 'Video'), ('360_VIEW', '360 View'), ('FLOOR_PLAN', 'Floor Plan')], max_length=50)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('media_upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media.mediaupload')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='stations.station')),
            ],
            options={
                'verbose_name': 'Station Media',
                'verbose_name_plural': 'Station Media',
                'db_table': 'station_media',
            },
        ),
        migrations.CreateModel(
            name='StationSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slot_number', models.IntegerField()),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('OCCUPIED', 'Occupied'), ('MAINTENANCE', 'Maintenance'), ('ERROR', 'Error')], default='AVAILABLE', max_length=50)),
                ('battery_level', models.IntegerField(default=0)),
                ('slot_metadata', models.JSONField(default=dict)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('current_rental', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rentals.rental')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='stations.station')),
            ],
            options={
                'verbose_name': 'Station Slot',
                'verbose_name_plural': 'Station Slots',
                'db_table': 'station_slots',
                'unique_together': {('station', 'slot_number')},
            },
        ),
        migrations.CreateModel(
            name='PowerBank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serial_number', models.CharField(max_length=255, unique=True)),
                ('model', models.CharField(max_length=255)),
                ('capacity_mah', models.IntegerField()),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('RENTED', 'Rented'), ('MAINTENANCE', 'Maintenance'), ('DAMAGED', 'Damaged')], default='AVAILABLE', max_length=50)),
                ('battery_level', models.IntegerField(default=100)),
                ('hardware_info', models.JSONField(default=dict)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('current_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stations.station')),
                ('current_slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stations.stationslot')),
            ],
            options={
                'verbose_name': 'Power Bank',
                'verbose_name_plural': 'Power Banks',
                'db_table': 'power_banks',
            },
        ),
        migrations.CreateModel(
            name='StationAmenityMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.stationamenity')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenity_mappings', to='stations.station')),
            ],
            options={
                'verbose_name': 'Station Amenity Mapping',
                'verbose_name_plural': 'Station Amenity Mappings',
                'db_table': 'station_amenity_mappings',
                'unique_together': {('station', 'amenity')},
            },
        ),
        migrations.CreateModel(
            name='UserStationFavorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='stations.station')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_stations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Station Favorite',
                'verbose_name_plural': 'User Station Favorites',
                'db_table': 'user_station_favorites',
                'unique_together': {('user', 'station')},
            },
        ),
    ]
