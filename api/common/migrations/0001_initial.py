# Generated by Django 5.2.5 on 2025-10-18 11:23

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LateFeeConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text="Choose a clear name for this fee setting (e.g., 'Standard Late Fee' or 'Holiday Double Rate')", max_length=100)),
                ('fee_type', models.CharField(choices=[('MULTIPLIER', 'Multiplier (e.g., 2x normal rate)'), ('FLAT_RATE', 'Flat rate per hour'), ('COMPOUND', 'Compound (multiplier + flat rate)')], default='MULTIPLIER', help_text='\n        Choose how to calculate late fees:\n\n        1. MULTIPLIER: Charge 2x, 3x, etc. the normal rental rate per minute\n           - Example: Normal rate is NPR 2/minute. At 2x multiplier, late fee is NPR 4/minute\n           - Simple and proportional to the rental cost\n\n        2. FLAT_RATE: Charge a fixed amount per overdue hour regardless of rental price\n           - Example: NPR 50 per overdue hour (same for all rentals)\n           - Fair and predictable\n\n        3. COMPOUND: Combine multiplier + flat rate\n           - Example: 2x multiplier + NPR 25 flat rate per hour\n           - Flexible for complex pricing strategies\n        ', max_length=50)),
                ('multiplier', models.DecimalField(decimal_places=2, default=2.0, help_text='\n        If using MULTIPLIER or COMPOUND fee type:\n        - 1.0 = charge normal rental rate for late time\n        - 2.0 = charge DOUBLE (2x) the normal rental rate for late time\n        - 0.5 = charge HALF the normal rental rate for late time\n\n        Example: Customer rented at NPR 2/minute normally.\n                 At 2.0 multiplier, they pay NPR 4/minute when late.\n        ', max_digits=5)),
                ('flat_rate_per_hour', models.DecimalField(decimal_places=2, default=0, help_text='\n        If using FLAT_RATE or COMPOUND fee type:\n        Extra amount to charge per overdue hour (in NPR).\n\n        Example: NPR 100.00 = an extra NPR 100 for every hour the rental is late.\n        This amount is added to (or replaces) the multiplier calculation.\n        ', max_digits=10)),
                ('grace_period_minutes', models.IntegerField(default=0, help_text='\n        How many minutes late before charges start applying.\n\n        Example: 15 minutes = customers get 15 minutes "free" being late.\n        Only time past 15 minutes will be charged as late fees.\n\n        This is generous to customers who are just running a few minutes late.\n        ')),
                ('max_daily_rate', models.DecimalField(blank=True, decimal_places=2, help_text='\n        Maximum late fee per day (optional safety limit).\n\n        Example: NPR 2,000.00 = maximum NPR 2,000 late fee in any 24-hour period,\n        even if someone keeps a power bank for a week past due date.\n\n        Helps prevent unexpectedly large charges. Leave empty for no limit.\n        ', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='api/notifications/views/\n├── __init__.py                 # Main router that merges all sub-routers\n├── core_views.py              # Core notification operations (2 classes)\n│   ├── NotificationListView\n│   └── NotificationStatsView\n├── detail_views.py            # Individual notification operations (1 class)\n│   └── NotificationDetailView\n└── action_views.py            # Bulk notification actions (1 class)\n    └── NotificationMarkAllReadView\n\n        Only ONE late fee configuration can be active at a time.\n\n        ✓ Active = This configuration will be used to calculate all late fees\n        ✗ Inactive = This configuration is saved but not currently being used\n\n        When you activate a new configuration, the previous active one automatically becomes inactive.\n        ')),
                ('applicable_package_types', models.JSONField(default=list, help_text='\n        Advanced: Limit this configuration to specific rental package types.\n        Leave empty to apply to ALL rental packages.\n\n        Format: ["HOURLY", "DAILY"] or leave as [] for all packages.\n        ')),
                ('metadata', models.JSONField(default=dict, help_text='Advanced system information. Usually leave empty.')),
            ],
            options={
                'verbose_name': 'Late Fee Configuration',
                'verbose_name_plural': 'Late Fee Configurations',
                'db_table': 'late_fee_configurations',
                'ordering': ['-created_at'],
            },
        ),
    ]
