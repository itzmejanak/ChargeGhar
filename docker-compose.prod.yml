x-common: &common
  env_file:
    - .env
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  networks:
    - powerbank_main
  restart: unless-stopped

services:
  powerbank_api:
    <<: *common
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "${API_PORT:-8010}:80"
    environment:
      WORKERS: ${WORKERS:-4}
      THREADS: ${THREADS:-16}
      ENVIRONMENT: production
    command: sh -c "python -m gunicorn api.web.wsgi:application --bind 0.0.0.0:80 --workers ${WORKERS:-4} --threads ${THREADS:-16} --timeout 480"
    depends_on:
      powerbank_db:
        condition: service_healthy
      powerbank_redis:
        condition: service_started
      powerbank_rabbitmq:
        condition: service_started
      powerbank_migrations:
        condition: service_completed_successfully
      powerbank_collectstatic:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/app/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      - static_volume:/application/staticfiles

  powerbank_db:
    <<: *common
    image: postgres:15
    environment:
      POSTGRES_INITDB_ARGS: --auth=scram-sha-256
    volumes:
      - powerbank_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all

  powerbank_redis:
    <<: *common
    image: redis:7-alpine
    volumes:
      - powerbank_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru

  powerbank_rabbitmq:
    <<: *common
    image: rabbitmq:3.13-management-alpine
    environment:
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-powerbank}
        RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - powerbank_rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  powerbank_celery:
    <<: *common
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: python -m celery -A tasks.app worker --loglevel=INFO
    depends_on:
      powerbank_api:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  powerbank_migrations:
    <<: *common
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: sh -c "sleep 10 && python manage.py migrate"
    depends_on:
      powerbank_db:
        condition: service_healthy
      powerbank_redis:
        condition: service_healthy
    restart: "no"
    environment:
      - POSTGRES_HOST=powerbank_db
      - REDIS_HOST=powerbank_redis
      - RABBITMQ_HOST=powerbank_rabbitmq

  powerbank_collectstatic:
    <<: *common
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: sh -c "sleep 10 && python manage.py collectstatic --noinput"
    depends_on:
      powerbank_db:
        condition: service_healthy
      powerbank_redis:
        condition: service_healthy
    volumes:
      - static_volume:/application/staticfiles
    restart: "no"
    environment:
      - POSTGRES_HOST=powerbank_db
      - REDIS_HOST=powerbank_redis
      - RABBITMQ_HOST=powerbank_rabbitmq

networks:
  powerbank_main:
    driver: bridge

volumes:
  powerbank_postgres_data:
  powerbank_redis_data:
  powerbank_rabbitmq_data:
  static_volume: