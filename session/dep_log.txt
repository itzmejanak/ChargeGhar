powerbank_api-1            | 2025-10-15 01:36:35 INFO api.config.storage Serving static files locally
powerbank_api-1            | 2025-10-15 01:36:35 INFO api.config.storage Serving media files locally
powerbank_api-1            | 2025-10-15 01:36:35 WARNING api.web.urls S3 is disabled, serving media files locally. Consider using S3.
powerbank_api-1            | 2025-10-15 01:36:35 INFO api.config.storage Serving static files locally
powerbank_api-1            | 2025-10-15 01:36:35 INFO api.config.storage Serving media files locally
powerbank_api-1            | 2025-10-15 01:36:35 WARNING api.web.urls S3 is disabled, serving media files locally. Consider using S3.
powerbank_api-1            | 2025-10-15 01:36:36 INFO api.config.storage Serving static files locally
powerbank_api-1            | 2025-10-15 01:36:36 INFO api.config.storage Serving media files locally
powerbank_api-1            | 2025-10-15 01:36:36 WARNING api.web.urls S3 is disabled, serving media files locally. Consider using S3.
powerbank_db-1             | 2025-10-14 19:52:45.368 UTC [62] LOG:  checkpoint starting: time
powerbank_db-1             | 2025-10-14 19:53:43.193 UTC [62] LOG:  checkpoint complete: wrote 579 buffers (3.5%); 1 WAL file(s) added, 0 removed, 0 recycled; write=57.763 s, sync=0.033 s, total=57.826 s; sync files=501, longest=0.001 s, average=0.001 s; distance=3029 kB, estimate=3029 kB
powerbank_api-1            | 2025-10-15 01:40:02 WARNING django.request Not Found: /test/payment
powerbank_api-1            | 2025-10-15 01:40:02 WARNING django.request Not Found: /favicon.ico
powerbank_api-1            | 2025-10-15 01:40:30 DEBUG axes.helpers Using django-ipware to get client IP address
powerbank_api-1            | 2025-10-15 01:40:30 DEBUG axes.helpers Using parameter credentials to get username with key settings.AXES_USERNAME_FORM_FIELD
powerbank_api-1            | 2025-10-15 01:40:30 DEBUG axes.handlers.database AXES: Getting all access attempts from database because no AXES_COOLOFF_TIME is configured
powerbank_api-1            | 2025-10-15 01:40:30 INFO axes.handlers.database AXES: Successful login by {username: "********************", ip_address: "********************", user_agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36", path_info: "/admin/login/"}.
powerbank_api-1            | 2025-10-15 01:40:30 DEBUG axes.handlers.database AXES: Skipping clean for expired access attempts because no AXES_COOLOFF_TIME is configured
powerbank_api-1            | /application/.venv/lib/python3.12/site-packages/admin_interface/templatetags/admin_interface_tags.py:29: UserWarning: Language chooser requires 'django.middleware.locale.LocaleMiddleware' in your MIDDLEWARE to work.
powerbank_api-1            |   warnings.warn(
powerbank_api-1            | 2025-10-15 01:40:32 INFO api.config.storage Serving static files locally
powerbank_api-1            | 2025-10-15 01:40:32 INFO api.config.storage Serving media files locally
powerbank_api-1            | 2025-10-15 01:40:33 WARNING api.web.urls S3 is disabled, serving media files locally. Consider using S3.
powerbank_api-1            | /application/.venv/lib/python3.12/site-packages/admin_interface/templatetags/admin_interface_tags.py:29: UserWarning: Language chooser requires 'django.middleware.locale.LocaleMiddleware' in your MIDDLEWARE to work.
powerbank_api-1            |   warnings.warn(
powerbank_api-1            | /application/.venv/lib/python3.12/site-packages/admin_interface/templatetags/admin_interface_tags.py:29: UserWarning: Language chooser requires 'django.middleware.locale.LocaleMiddleware' in your MIDDLEWARE to work.
powerbank_api-1            |   warnings.warn(
powerbank_api-1            | 2025-10-15 01:41:37 INFO nepal_gateways.esewa.client EsewaClient (v2) initialized for Product Code: EPAY... in sandbox mode. Initiation: https://rc-epay.esewa.com.np/api/epay/main/v2/form, Status Check: https://rc.esewa.com.np/api/epay/transaction/status/
powerbank_api-1            | 2025-10-15 01:41:37 INFO nepal_gateways.esewa.client Initiating eSewa v2 payment for TxUUID: 'cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025', Details: amount=100, tax=0, psc=0, pdc=0, total_amount=100
powerbank_api-1            | 2025-10-15 01:41:37 DEBUG nepal_gateways.esewa.client eSewa INITIATION signature message (for hashing): "total_amount=100,transaction_uuid=cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025,product_code=EPAYTEST"
powerbank_api-1            | 2025-10-15 01:41:37 DEBUG nepal_gateways.esewa.client eSewa v2 initiation form fields prepared: {'amount': '100', 'tax_amount': '0', 'total_amount': '100', 'transaction_uuid': 'cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025', 'product_code': 'EPAYTEST', 'product_service_charge': '0', 'product_delivery_charge': '0', 'success_url': 'https://main.chargeghar.com/api/payments/esewa/success', 'failure_url': 'https://main.chargeghar.com/api/payments/esewa/failure', 'signed_field_names': 'total_amount,transaction_uuid,product_code', 'signature': 't7YGM6L3po9bSzPTGnCaBtjcsm3UuwN5SU8W+/StCkw='}
powerbank_api-1            | 2025-10-15 01:41:37 DEBUG nepal_gateways.esewa.client EsewaV2InitiationResponse created: URL='https://rc-epay.esewa.com.np/api/epay/main/v2/form', Method='POST', Fields=['amount', 'tax_amount', 'total_amount', 'transaction_uuid', 'product_code', 'product_service_charge', 'product_delivery_charge', 'success_url', 'failure_url', 'signed_field_names', 'signature']
powerbank_api-1            | 2025-10-15 01:41:37 INFO api.payments.services.payment_intent Top-up intent created: cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025 for user janak
powerbank_api-1            | 2025-10-15 01:41:50 INFO nepal_gateways.esewa.client EsewaClient (v2) initialized for Product Code: EPAY... in sandbox mode. Initiation: https://rc-epay.esewa.com.np/api/epay/main/v2/form, Status Check: https://rc.esewa.com.np/api/epay/transaction/status/
powerbank_api-1            | 2025-10-15 01:41:50 INFO nepal_gateways.esewa.client Verifying eSewa v2 payment. Raw callback data: {'data': 'eyJ0cmFuc2FjdGlvbl9jb2RlIjoiMDAwQ0tQMCIsInN0YXR1cyI6IkNPTVBMRVRFIiwidG90YWxfYW1vdW50IjoiMTAwLjAiLCJ0cmFuc2FjdGlvbl91dWlkIjoiY2M4NmMxZGUtZGZhMS00NmU5LTllMWYtNGFkNWYwNmEzMDI1IiwicHJvZHVjdF9jb2RlIjoiRVBBWVRFU1QiLCJzaWduZWRfZmllbGRfbmFtZXMiOiJ0cmFuc2FjdGlvbl9jb2RlLHN0YXR1cyx0b3RhbF9hbW91bnQsdHJhbnNhY3Rpb25fdXVpZCxwcm9kdWN0X2NvZGUsc2lnbmVkX2ZpZWxkX25hbWVzIiwic2lnbmF0dXJlIjoid3lqdFlVVHU3MFlJNVZKelhKbTNGKzB6SEpwV3hKRGZaNW1GcVFDUWhGYz0ifQ=='}
powerbank_api-1            | 2025-10-15 01:41:50 DEBUG nepal_gateways.esewa.client Decoding Base64 callback data: eyJ0cmFuc2FjdGlvbl9jb2RlIjoiMDAwQ0tQMCIsInN0YXR1cy...
powerbank_api-1            | 2025-10-15 01:41:50 DEBUG nepal_gateways.esewa.client Parsed JSON from callback: {'transaction_code': '000CKP0', 'status': 'COMPLETE', 'total_amount': '100.0', 'transaction_uuid': 'cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025', 'product_code': 'EPAYTEST', 'signed_field_names': 'transaction_code,status,total_amount,transaction_uuid,product_code,signed_field_names', 'signature': 'wyjtYUTu70YI5VJzXJm3F+0zHJpWxJDfZ5mFqQCQhFc='}
powerbank_api-1            | 2025-10-15 01:41:50 DEBUG nepal_gateways.esewa.client eSewa callback signature verification message: "transaction_code=000CKP0,status=COMPLETE,total_amount=100.0,transaction_uuid=cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025,product_code=EPAYTEST,signed_field_names=transaction_code,status,total_amount,transaction_uuid,product_code,signed_field_names"
powerbank_api-1            | 2025-10-15 01:41:50 DEBUG nepal_gateways.esewa.client Generated signature: wyjtYUTu70YI5VJzXJm3F+0zHJpWxJDfZ5mFqQCQhFc=, Received signature: wyjtYUTu70YI5VJzXJm3F+0zHJpWxJDfZ5mFqQCQhFc=
powerbank_api-1            | 2025-10-15 01:41:50 INFO nepal_gateways.esewa.client eSewa callback signature verified successfully.
powerbank_api-1            | 2025-10-15 01:41:50 DEBUG nepal_gateways.esewa.client Calling eSewa Status Check API: https://rc.esewa.com.np/api/epay/transaction/status/ with params: {'product_code': 'EPAYTEST', 'total_amount': 100.0, 'transaction_uuid': 'cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025'}
powerbank_api-1            | 2025-10-15 01:41:50 DEBUG urllib3.connectionpool Starting new HTTPS connection (1): rc.esewa.com.np:443
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG urllib3.connectionpool https://rc.esewa.com.np:443 "GET /api/epay/transaction/status/?product_code=EPAYTEST&total_amount=100.0&transaction_uuid=cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025 HTTP/11" 200 None
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG nepal_gateways.esewa.client eSewa Status Check API JSON response: {'product_code': 'EPAYTEST', 'transaction_uuid': 'cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025', 'total_amount': 100.0, 'status': 'COMPLETE', 'ref_id': '000CKP0'}
powerbank_api-1            | 2025-10-15 01:41:51 INFO nepal_gateways.esewa.client eSewa payment VERIFIED (via Status API) for TxUUID: 'cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025', eSewa RefID: '000CKP0', Status: COMPLETE
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG nepal_gateways.esewa.client EsewaV2VerificationResult created: Successful=True, Status='COMPLETE', TxID='000CKP0', OrderID='cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025', Amount='100.0'
powerbank_api-1            | 2025-10-15 01:41:51 INFO api.payments.services.wallet Balance added to wallet: janak +100.00
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_refund_approved_notification(self, refund_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def award_points_task(self, user_id, points, source, description, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_account_deactivation_notification(self, user_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_station_offline_notification(self, station_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_rental_reminder_notification(self, rental_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_milestone_notifications(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def calculate_monthly_points_leaderboard(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_refund_rejected_notification(self, refund_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def award_topup_points_task(self, user_id, topup_amount):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def retry_failed_notifications(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def cleanup_old_notifications(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def backend_cleanup():
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_payment_status_notification(self, user_id, transaction_id, status, amount):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def cleanup_old_points_transactions(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_wallet_discrepancy_alert(self, discrepancies):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def accumulate(self, *args, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def award_rental_completion_points(self, user_id, rental_id, is_timely_return=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_push_notification_task(self, user_id, title, message, data=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_achievement_unlock_notifications(self, user_id, achievements):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_otp_task(self, identifier, otp, purpose):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def generate_notification_analytics_report(self, date_range=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def xmap(task, it):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_referral_completion_notification(self, referral_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def generate_points_analytics_report(self, date_range=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_optimization_report(self, optimization_suggestions):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def xstarmap(task, it):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def process_referral_task(self, invitee_id, inviter_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_refund_request_notification(self, refund_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def chunks(task, it, n):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_milestone_notification(self, user_id, milestone):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_notification(self, user_id, points, source, description):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_station_issue_notification(self, issue_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def sync_user_points_balance(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_discrepancy_alert(self, discrepancies):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def chain(*args, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG celery.utils.functional 
powerbank_api-1            | def expire_old_referrals(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_rabbitmq-1       | 2025-10-14 19:56:51.173049+00:00 [info] <0.1106.0> accepting AMQP connection <0.1106.0> (172.19.0.5:41618 -> 172.19.0.2:5672)
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG amqp Start from server, version: 0.9, properties: {'capabilities': {'publisher_confirms': True, 'exchange_exchange_bindings': True, 'basic.nack': True, 'consumer_cancel_notify': True, 'connection.blocked': True, 'consumer_priorities': True, 'authentication_failure_close': True, 'per_consumer_qos': True, 'direct_reply_to': True}, 'cluster_name': 'rabbit@f4bb5fb9e556', 'copyright': 'Copyright (c) 2007-2024 Broadcom Inc and/or its subsidiaries', 'information': 'Licensed under the MPL 2.0. Website: https://rabbitmq.com', 'platform': 'Erlang/OTP 26.2.5.15', 'product': 'RabbitMQ', 'version': '3.13.7'}, mechanisms: [b'PLAIN', b'AMQPLAIN'], locales: ['en_US']
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG amqp using channel_id: 1
powerbank_rabbitmq-1       | 2025-10-14 19:56:51.175115+00:00 [info] <0.1106.0> connection <0.1106.0> (172.19.0.5:41618 -> 172.19.0.2:5672): user 'powerbank' authenticated and granted access to vhost '/'
powerbank_api-1            | 2025-10-15 01:41:51 DEBUG amqp Channel open
powerbank_celery-1         | [2025-10-15 01:41:51,179: INFO/MainProcess] Task api.points.tasks.award_topup_points_task[d594cabf-0473-47eb-b9ac-dcfd6ddfe2cf] received
powerbank_api-1            | 2025-10-15 01:41:51 WARNING api.notifications.services.notify No rule found for type: payment_status
powerbank_celery-1         | [2025-10-15 01:41:51,201: INFO/ForkPoolWorker-8] Points awarded: janak +10 (TOPUP)
powerbank_celery-1         | [2025-10-15 01:41:51,203: INFO/ForkPoolWorker-8] Top-up points awarded: janak +10 for NPR 100.0
powerbank_celery-1         | [2025-10-15 01:41:51,208: INFO/ForkPoolWorker-8] Task api.points.tasks.award_topup_points_task succeeded
powerbank_celery-1         | [2025-10-15 01:41:51,208: INFO/ForkPoolWorker-8] Task api.points.tasks.award_topup_points_task[d594cabf-0473-47eb-b9ac-dcfd6ddfe2cf] succeeded in 0.027467985055409372s: {'user_id': 1, 'topup_amount': 100.0, 'points_awarded': 10}
powerbank_api-1            | 2025-10-15 01:41:51 INFO api.notifications.services.fcm Firebase initialized from credentials file
powerbank_api-1            | 2025-10-15 01:41:51 WARNING api.notifications.services.notify No phone number available for SMS to user janak
powerbank_api-1            | 2025-10-15 01:41:51 INFO api.notifications.services.notify Notification sent: janak - Payment Successful
powerbank_api-1            | 2025-10-15 01:41:51 INFO api.payments.services.payment_intent Top-up verified and processed: cc86c1de-dfa1-46e9-9e1f-4ad5f06a3025
powerbank_db-1             | 2025-10-14 19:57:45.286 UTC [62] LOG:  checkpoint starting: time
powerbank_db-1             | 2025-10-14 19:57:53.216 UTC [62] LOG:  checkpoint complete: wrote 81 buffers (0.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=7.924 s, sync=0.004 s, total=7.930 s; sync files=57, longest=0.001 s, average=0.001 s; distance=22 kB, estimate=2729 kB
powerbank_api-1            | /application/.venv/lib/python3.12/site-packages/admin_interface/templatetags/admin_interface_tags.py:29: UserWarning: Language chooser requires 'django.middleware.locale.LocaleMiddleware' in your MIDDLEWARE to work.
powerbank_api-1            |   warnings.warn(
powerbank_api-1            | 2025-10-15 01:44:50 INFO nepal_gateways.khalti.client KhaltiClient initialized in sandbox mode. API Base: https://dev.khalti.com/api/v2/. Default timeout: 30s
powerbank_api-1            | 2025-10-15 01:44:50 INFO nepal_gateways.khalti.client Initiating Khalti payment for OrderID: '26fb33cd-3b0c-4170-bd03-16842cb4a3c5', Amount (Paisa): 10000
powerbank_api-1            | 2025-10-15 01:44:50 DEBUG nepal_gateways.khalti.client Khalti initiation payload: {'return_url': 'https://main.chargeghar.com/api/payments/khalti/callback', 'website_url': 'https://main.chargeghar.com', 'amount': 10000, 'purchase_order_id': '26fb33cd-3b0c-4170-bd03-16842cb4a3c5', 'purchase_order_name': 'Wallet top-up - NPR 100.00', 'customer_info': {'name': 'janak', 'email': 'janak@powerbank.com'}}
powerbank_api-1            | 2025-10-15 01:44:50 DEBUG urllib3.connectionpool Starting new HTTPS connection (1): dev.khalti.com:443
powerbank_api-1            | 2025-10-15 01:44:50 DEBUG urllib3.connectionpool https://dev.khalti.com:443 "POST /api/v2/epayment/initiate/ HTTP/11" 200 None
powerbank_api-1            | 2025-10-15 01:44:50 INFO nepal_gateways.khalti.client Khalti payment initiated. pidx: KgwqwyHCLqjRMMi8rCeR55, payment_url: https://test-pay.khalti.com/?pidx=KgwqwyHCLqjRMMi8rCeR55
powerbank_api-1            | 2025-10-15 01:44:50 DEBUG nepal_gateways.khalti.client KhaltiInitiationResponse created: PaymentURL='https://test-pay.khalti.com/?pidx=KgwqwyHCLqjRMMi8rCeR55', pidx='KgwqwyHCLqjRMMi8rCeR55'
powerbank_api-1            | 2025-10-15 01:44:50 INFO api.payments.services.payment_intent Top-up intent created: 26fb33cd-3b0c-4170-bd03-16842cb4a3c5 for user janak
powerbank_api-1            | 2025-10-15 01:45:18 INFO nepal_gateways.khalti.client KhaltiClient initialized in sandbox mode. API Base: https://dev.khalti.com/api/v2/. Default timeout: 30s
powerbank_api-1            | 2025-10-15 01:45:18 INFO nepal_gateways.khalti.client Verifying Khalti payment. Callback data: {'pidx': 'KgwqwyHCLqjRMMi8rCeR55', 'status': 'Completed', 'txnId': 'v4VqmjVr4XbTkNaooNyoz5', 'transaction_id': 'v4VqmjVr4XbTkNaooNyoz5', 'tidx': 'v4VqmjVr4XbTkNaooNyoz5', 'amount': '10000', 'total_amount': '10000', 'mobile': '98XXXXX000', 'purchase_order_id': '26fb33cd-3b0c-4170-bd03-16842cb4a3c5', 'purchase_order_name': 'Wallet top-up - NPR 100.00'}
powerbank_api-1            | 2025-10-15 01:45:18 INFO nepal_gateways.khalti.client Khalti callback received for pidx: KgwqwyHCLqjRMMi8rCeR55, status from callback: 'Completed'. Proceeding with Lookup API.
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG nepal_gateways.khalti.client Calling Khalti Lookup API: https://dev.khalti.com/api/v2/epayment/lookup/ with payload: {'pidx': 'KgwqwyHCLqjRMMi8rCeR55'}
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG urllib3.connectionpool Starting new HTTPS connection (1): dev.khalti.com:443
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG urllib3.connectionpool https://dev.khalti.com:443 "POST /api/v2/epayment/lookup/ HTTP/11" 200 None
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG nepal_gateways.khalti.client Khalti Lookup API JSON response: {'pidx': 'KgwqwyHCLqjRMMi8rCeR55', 'total_amount': 10000, 'status': 'Completed', 'transaction_id': 'v4VqmjVr4XbTkNaooNyoz5', 'fee': 300, 'refunded': False}
powerbank_api-1            | 2025-10-15 01:45:18 INFO nepal_gateways.khalti.client Khalti payment status for pidx: 'KgwqwyHCLqjRMMi8rCeR55' is 'Completed'. TxID: 'v4VqmjVr4XbTkNaooNyoz5', Amount: 10000
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG nepal_gateways.khalti.client KhaltiVerificationResult created: Successful=True, Status='Completed', KhaltiTxID='v4VqmjVr4XbTkNaooNyoz5', pidx='KgwqwyHCLqjRMMi8rCeR55', AmountPaisa='10000'
powerbank_api-1            | 2025-10-15 01:45:18 INFO api.payments.services.wallet Balance added to wallet: janak +100.00
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_refund_approved_notification(self, refund_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def award_topup_points_task(self, user_id, topup_amount):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_account_deactivation_notification(self, user_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def calculate_monthly_points_leaderboard(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_station_offline_notification(self, station_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_milestone_notifications(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_rental_reminder_notification(self, rental_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_refund_rejected_notification(self, refund_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def award_points_task(self, user_id, points, source, description, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def retry_failed_notifications(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def expire_old_referrals(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def cleanup_old_notifications(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def sync_user_points_balance(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def backend_cleanup():
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_payment_status_notification(self, user_id, transaction_id, status, amount):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_wallet_discrepancy_alert(self, discrepancies):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def accumulate(self, *args, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_push_notification_task(self, user_id, title, message, data=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_achievement_unlock_notifications(self, user_id, achievements):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def process_referral_task(self, invitee_id, inviter_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_otp_task(self, identifier, otp, purpose):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def generate_notification_analytics_report(self, date_range=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def generate_points_analytics_report(self, date_range=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def xmap(task, it):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_referral_completion_notification(self, referral_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_optimization_report(self, optimization_suggestions):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def xstarmap(task, it):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_refund_request_notification(self, refund_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def chunks(task, it, n):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def award_rental_completion_points(self, user_id, rental_id, is_timely_return=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_milestone_notification(self, user_id, milestone):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_notification(self, user_id, points, source, description):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def cleanup_old_points_transactions(self):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_station_issue_notification(self, issue_id):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def send_points_discrepancy_alert(self, discrepancies):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG celery.utils.functional 
powerbank_api-1            | def chain(*args, **kwargs):
powerbank_api-1            |     return 1
powerbank_api-1            | 
powerbank_rabbitmq-1       | 2025-10-14 20:00:18.674691+00:00 [info] <0.1144.0> accepting AMQP connection <0.1144.0> (172.19.0.5:50908 -> 172.19.0.2:5672)
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG amqp Start from server, version: 0.9, properties: {'capabilities': {'publisher_confirms': True, 'exchange_exchange_bindings': True, 'basic.nack': True, 'consumer_cancel_notify': True, 'connection.blocked': True, 'consumer_priorities': True, 'authentication_failure_close': True, 'per_consumer_qos': True, 'direct_reply_to': True}, 'cluster_name': 'rabbit@f4bb5fb9e556', 'copyright': 'Copyright (c) 2007-2024 Broadcom Inc and/or its subsidiaries', 'information': 'Licensed under the MPL 2.0. Website: https://rabbitmq.com', 'platform': 'Erlang/OTP 26.2.5.15', 'product': 'RabbitMQ', 'version': '3.13.7'}, mechanisms: [b'PLAIN', b'AMQPLAIN'], locales: ['en_US']
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG amqp using channel_id: 1
powerbank_rabbitmq-1       | 2025-10-14 20:00:18.677904+00:00 [info] <0.1144.0> connection <0.1144.0> (172.19.0.5:50908 -> 172.19.0.2:5672): user 'powerbank' authenticated and granted access to vhost '/'
powerbank_api-1            | 2025-10-15 01:45:18 DEBUG amqp Channel open
powerbank_celery-1         | [2025-10-15 01:45:18,681: INFO/MainProcess] Task api.points.tasks.award_topup_points_task[494c7ace-c225-45be-8a16-229baf302cc2] received
powerbank_api-1            | 2025-10-15 01:45:18 WARNING api.notifications.services.notify No rule found for type: payment_status
powerbank_celery-1         | [2025-10-15 01:45:18,686: INFO/ForkPoolWorker-8] Points awarded: janak +10 (TOPUP)
powerbank_celery-1         | [2025-10-15 01:45:18,687: INFO/ForkPoolWorker-8] Top-up points awarded: janak +10 for NPR 100.0
powerbank_celery-1         | [2025-10-15 01:45:18,688: INFO/ForkPoolWorker-8] Task api.points.tasks.award_topup_points_task succeeded
powerbank_celery-1         | [2025-10-15 01:45:18,688: INFO/ForkPoolWorker-8] Task api.points.tasks.award_topup_points_task[494c7ace-c225-45be-8a16-229baf302cc2] succeeded in 0.0061890670331195s: {'user_id': 1, 'topup_amount': 100.0, 'points_awarded': 10}
powerbank_api-1            | 2025-10-15 01:45:18 INFO api.notifications.services.fcm Firebase initialized from credentials file
powerbank_api-1            | 2025-10-15 01:45:18 WARNING api.notifications.services.notify No phone number available for SMS to user janak
powerbank_api-1            | 2025-10-15 01:45:18 INFO api.notifications.services.notify Notification sent: janak - Payment Successful
powerbank_api-1            | 2025-10-15 01:45:18 INFO api.payments.services.payment_intent Top-up verified and processed: 26fb33cd-3b0c-4170-bd03-16842cb4a3c5
powerbank_api-1            | 2025-10-15 01:45:22 ERROR api.payments.services.payment_intent Failed to verify top-up payment: Payment intent is not pending
powerbank_api-1            | 2025-10-15 01:45:22 ERROR api.payments.view_callbacks.callbacks Khalti payment verification failed: Payment intent is not pending
^C

Returning to menu...