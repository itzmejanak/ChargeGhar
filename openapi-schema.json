openapi: 3.0.3
info:
  title: ChargeGhar Nepal API
  version: a315307-dirty
  description: ChargeGhar API - Shared Power Bank Network for Nepal. This documentation
    only shows endpoints documented in our Features TOC.
  contact:
    name: ChargeGhar API Support
    email: support@chargegh.com
  license:
    name: Proprietary
paths:
  /api/admin/config:
    get:
      operationId: api_admin_config_retrieve
      description: Manage app configurations (Admin only)
      summary: Admin Config Management
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    post:
      operationId: api_admin_config_create
      description: Manage app configurations (Admin only)
      summary: Admin Config Management
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppConfigRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppConfigRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/admin/content/analytics:
    get:
      operationId: api_admin_content_analytics_retrieve
      description: Retrieve comprehensive content analytics (admin only) with caching
      summary: Content Analytics
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/admin/content/pages:
    put:
      operationId: api_admin_content_pages_update
      description: Manage content pages (admin only) with logging
      summary: Admin Content Pages
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentPageRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentPageRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/admin/points/adjust:
    post:
      operationId: api_admin_points_adjust_create
      description: Adjust user points (admin only)
      summary: Admin points adjustment
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PointsAdjustmentRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PointsAdjustmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PointsAdjustmentRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsAdjustmentResponse'
          description: ''
  /api/admin/points/bulk-award:
    post:
      operationId: api_admin_points_bulk_award_create
      description: Award points to multiple users (admin only)
      summary: Bulk award points
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkPointsAwardRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPointsAwardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkPointsAwardRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPointsAwardResponse'
          description: ''
  /api/admin/promotions/analytics:
    get:
      operationId: get_promotion_analytics
      description: Get comprehensive promotion analytics (Staff only)
      summary: Promotion Analytics (Admin)
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponAnalyticsResponse'
          description: ''
  /api/admin/promotions/coupons/:
    get:
      operationId: list_admin_coupons
      description: Returns paginated list of all coupons with filtering (Staff only)
      summary: List All Coupons (Admin)
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CouponDetail'
          description: ''
    post:
      operationId: create_admin_coupon
      description: Creates new coupon (Staff only)
      summary: Create Coupon (Admin)
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CouponCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponCreate'
          description: ''
  /api/admin/promotions/coupons/{id}/:
    get:
      operationId: get_admin_coupon_details
      description: Retrieves specific coupon details (Staff only)
      summary: Get Coupon Details (Admin)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Coupon.
        required: true
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponDetail'
          description: ''
    put:
      operationId: update_admin_coupon
      description: Updates coupon information (Staff only)
      summary: Update Coupon (Admin)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Coupon.
        required: true
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CouponUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponUpdate'
          description: ''
    patch:
      operationId: partial_update_admin_coupon
      description: Partially updates coupon information (Staff only)
      summary: Partial Update Coupon (Admin)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Coupon.
        required: true
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCouponUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCouponUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCouponUpdateRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponUpdate'
          description: ''
  /api/admin/promotions/coupons/{id}/performance/:
    get:
      operationId: api_admin_promotions_coupons_performance_retrieve
      description: Admin-only coupon management ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Coupon.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponDetail'
          description: ''
  /api/admin/promotions/coupons/bulk-create/:
    post:
      operationId: api_admin_promotions_coupons_bulk_create_create
      description: Admin-only coupon management ViewSet
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponDetailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CouponDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponDetail'
          description: ''
  /api/admin/promotions/coupons/filter:
    post:
      operationId: filter_admin_coupons
      description: Get filtered and paginated list of coupons (Staff only)
      summary: Filter Coupons (Admin)
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponFilterRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CouponFilterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponFilterRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponFilter'
          description: ''
  /api/admin/referrals/analytics:
    get:
      operationId: api_admin_referrals_analytics_retrieve
      description: Retrieve comprehensive referral analytics (admin only)
      summary: Get referral analytics
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: End date for analytics (ISO format)
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date for analytics (ISO format)
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralAnalyticsResponse'
          description: ''
  /api/admin/refunds:
    get:
      operationId: api_admin_refunds_retrieve
      description: Retrieve all pending refund requests for admin review
      summary: Get Pending Refund Requests
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: 'Number of items per page (default: 20)'
      tags:
      - Admin
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
  /api/admin/refunds/approve:
    post:
      operationId: api_admin_refunds_approve_create
      description: Approve a pending refund request
      summary: Approve Refund
      tags:
      - Admin
      - Payments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundActionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RefundActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundActionRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/admin/refunds/reject:
    post:
      operationId: api_admin_refunds_reject_create
      description: Reject a pending refund request with reason
      summary: Reject Refund
      tags:
      - Admin
      - Payments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundRejectRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRejectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundRejectRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/admin/social/achievements:
    post:
      operationId: api_admin_social_achievements_create
      description: Create a new achievement (admin only)
      summary: Create achievement
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AchievementCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AchievementCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AchievementCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementCreateResponse'
          description: ''
  /api/admin/social/analytics:
    get:
      operationId: api_admin_social_analytics_retrieve
      description: Retrieve comprehensive social analytics (admin only)
      summary: Get social analytics
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementAnalyticsResponse'
          description: ''
  /api/admin/stations/:
    get:
      operationId: api_admin_stations_list
      description: Returns all stations including maintenance mode (Staff only)
      summary: List All Stations (Admin)
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDetail'
          description: ''
    post:
      operationId: api_admin_stations_create
      description: Creates new charging station (Staff only)
      summary: Create Station (Admin)
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/StationCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationCreate'
          description: ''
  /api/admin/stations/{serial_number}/:
    get:
      operationId: api_admin_stations_retrieve
      description: Retrieves specific station details (Staff only)
      summary: Get Station (Admin)
      parameters:
      - in: path
        name: serial_number
        schema:
          type: string
        required: true
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetail'
          description: ''
    put:
      operationId: api_admin_stations_update
      description: Updates station information (Staff only)
      summary: Update Station (Admin)
      parameters:
      - in: path
        name: serial_number
        schema:
          type: string
        required: true
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/StationUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationUpdate'
          description: ''
    patch:
      operationId: api_admin_stations_partial_update
      description: Partially updates station information (Staff only)
      summary: Partial Update Station (Admin)
      parameters:
      - in: path
        name: serial_number
        schema:
          type: string
        required: true
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStationUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStationUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStationUpdateRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationUpdate'
          description: ''
  /api/admin/updates:
    get:
      operationId: api_admin_updates_retrieve
      description: Manage app updates (Admin only)
      summary: Admin Update Management
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    post:
      operationId: api_admin_updates_create
      description: Manage app updates (Admin only)
      summary: Admin Update Management
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AppUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/admin/versions:
    get:
      operationId: api_admin_versions_retrieve
      description: Manage app versions (Admin only)
      summary: Admin Version Management
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      - in: query
        name: platform
        schema:
          type: string
        description: Filter by platform (android/ios)
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    post:
      operationId: api_admin_versions_create
      description: Manage app versions (Admin only)
      summary: Admin Version Management
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      - in: query
        name: platform
        schema:
          type: string
        description: Filter by platform (android/ios)
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppVersionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AppVersionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppVersionRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/admin_panel/profiles:
    get:
      operationId: api_admin_panel_profiles_retrieve
      description: Get admin profile list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProfile'
          description: ''
    post:
      operationId: api_admin_panel_profiles_create
      description: Create admin profile
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProfileRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProfile'
          description: ''
  /api/app/config/public:
    get:
      operationId: api_app_config_public_retrieve
      description: Get public app configurations (non-sensitive data only)
      summary: Public App Config
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/app/countries:
    get:
      operationId: api_app_countries_list
      description: Returns a list of countries with dialing codes (e.g., +977 for
        Nepal).
      summary: Get Country Codes
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryList'
          description: ''
  /api/app/countries/search:
    get:
      operationId: api_app_countries_search_retrieve
      description: Search countries by name or code
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryList'
          description: ''
  /api/app/health:
    get:
      operationId: api_app_health_check
      description: Check real-time health status of the application and its services
      summary: App Health Check
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/app/init-data:
    get:
      operationId: api_app_init_data_retrieve
      description: Get app initialization data
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInitData'
          description: ''
  /api/app/media/upload:
    post:
      operationId: api_app_media_upload_create
      description: Upload media files like images, videos to Cloudinary. Returns secure
        URLs for storage and CDN access.
      summary: Upload Media
      tags:
      - App
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaUploadCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaUploadCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaUploadCreate'
          description: ''
  /api/app/media/uploads:
    get:
      operationId: api_app_media_uploads_list
      description: Get user's uploaded media files
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaUpload'
          description: ''
  /api/app/media/uploads/{upload_id}:
    delete:
      operationId: api_app_media_uploads_destroy
      description: Delete a specific media upload by ID
      summary: Delete Media Upload
      parameters:
      - in: path
        name: upload_id
        schema:
          type: string
        description: Media upload ID
        required: true
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/app/updates:
    get:
      operationId: api_app_updates_retrieve
      description: Get recent app updates with pagination
      summary: Recent App Updates
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: 'Number of updates to return (default: 5, max: 20)'
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
  /api/app/updates/since/{version}:
    get:
      operationId: api_app_updates_since_retrieve
      description: Get all app updates released since the specified version
      summary: Updates Since Version
      parameters:
      - in: path
        name: version
        schema:
          type: string
        description: Version string (e.g., '1.0.0')
        required: true
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/app/version:
    get:
      operationId: api_app_version_retrieve
      description: Check for app updates and version compatibility
      summary: App Version Info
      parameters:
      - in: query
        name: current_version
        schema:
          type: string
        description: Current app version
        required: true
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    post:
      operationId: api_app_version_create
      description: Returns the latest app version with real-time update check.
      summary: Check App Version
      tags:
      - App
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppVersionCheckRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AppVersionCheckRequest'
            examples:
              VersionCheckRequest:
                value:
                  platform: android
                  current_version: 1.0.0
                summary: Version Check Request
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppVersionCheckRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/account:
    delete:
      operationId: api_auth_account_destroy
      description: Permanently deletes user account and data
      summary: Delete Account
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/apple/login:
    get:
      operationId: api_auth_apple_login_retrieve
      description: Get Apple OAuth login URL (uses django-allauth)
      summary: Apple OAuth Login
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/debug/headers:
    get:
      operationId: api_auth_debug_headers_retrieve
      description: Show request headers for debugging
      summary: Debug Headers
      tags:
      - App
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/device:
    post:
      operationId: api_auth_device_create
      description: Update FCM token and device data
      summary: Register Device
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDeviceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeviceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDeviceRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/google/login:
    get:
      operationId: api_auth_google_login_retrieve
      description: Get Google OAuth login URL (uses django-allauth)
      summary: Google OAuth Login
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/login:
    post:
      operationId: api_auth_login_create
      description: Completes login after OTP verification (no password required)
      summary: User Login
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/logout:
    post:
      operationId: api_auth_logout_create
      description: Invalidates JWT and clears session
      summary: User Logout
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/me:
    get:
      operationId: api_auth_me_retrieve
      description: Returns authenticated user's real-time data
      summary: Current User Info
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/otp/request:
    post:
      operationId: api_auth_otp_request_create
      description: Sends OTP via SMS or Email for registration or login
      summary: Request OTP
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPRequestRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/OTPRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/otp/verify:
    post:
      operationId: api_auth_otp_verify_create
      description: Validates OTP and returns verification token for registration or
        login
      summary: Verify OTP
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPVerificationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPVerificationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/refresh:
    post:
      operationId: api_auth_refresh_create
      description: Refreshes JWT access token
      summary: Refresh Token
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/register:
    post:
      operationId: api_auth_register_create
      description: Creates new user account after OTP verification (no password required)
      summary: User Registration
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/social/error:
    get:
      operationId: api_auth_social_error_retrieve
      description: Handle social authentication errors
      summary: Social Auth Error
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/auth/social/success:
    get:
      operationId: api_auth_social_success_retrieve
      description: Handle successful social authentication and generate JWT tokens
      summary: Social Auth Success
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/content/about:
    get:
      operationId: api_content_about_retrieve
      description: Retrieve about us information (cached for performance)
      summary: About Us
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/content/banners:
    get:
      operationId: api_content_banners_retrieve
      description: Retrieve currently active promotional banners (light caching)
      summary: Active Banners
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/content/contact:
    get:
      operationId: api_content_contact_retrieve
      description: Retrieve all contact information (cached for performance)
      summary: Contact Information
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/content/faq:
    get:
      operationId: api_content_faq_retrieve
      description: Retrieve FAQs with search and pagination support
      summary: FAQ Content
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      - in: query
        name: search
        schema:
          type: string
        description: Search query for FAQs
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
  /api/content/privacy-policy:
    get:
      operationId: api_content_privacy_policy_retrieve
      description: Retrieve current privacy policy content (cached for performance)
      summary: Privacy Policy
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/content/search:
    get:
      operationId: api_content_search_retrieve
      description: Search across all content types with rate limiting and pagination
      summary: Content Search
      parameters:
      - in: query
        name: content_type
        schema:
          type: string
        description: Content type to search (all, pages, faqs, contact)
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      - in: query
        name: query
        schema:
          type: string
        description: Search query
        required: true
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: ''
  /api/content/terms-of-service:
    get:
      operationId: api_content_terms_of_service_retrieve
      description: Retrieve current terms of service content
      summary: Terms of Service
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/notifications:
    get:
      operationId: api_notifications_list
      description: Retrieve user notifications with optional filtering by type, channel,
        read status, and date range
      summary: Get User Notifications
      parameters:
      - in: query
        name: channel
        schema:
          type: string
        description: Filter by channel (in_app, push, sms, email)
      - in: query
        name: is_read
        schema:
          type: boolean
        description: Filter by read status (true/false)
      - in: query
        name: notification_type
        schema:
          type: string
        description: Filter by notification type (rental, payment, promotion, system,
          achievement)
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: 'Number of items per page (default: 20)'
      tags:
      - Notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
          description: ''
  /api/notifications/detail/{notification_id}:
    get:
      operationId: api_notifications_detail
      description: Retrieve details of a specific notification
      summary: Get Notification Detail
      parameters:
      - in: path
        name: notification_id
        schema:
          type: string
        description: Notification ID
        required: true
      tags:
      - Notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDetailResponse'
          description: ''
    post:
      operationId: api_notifications_detail_create
      description: Mark a specific notification as read
      summary: Mark Notification as Read
      parameters:
      - in: path
        name: notification_id
        schema:
          type: string
        description: Notification ID
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUpdateRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDetailResponse'
          description: ''
    delete:
      operationId: api_notifications_detail_destroy
      description: Delete a specific notification
      summary: Delete Notification
      parameters:
      - in: path
        name: notification_id
        schema:
          type: string
        description: Notification ID
        required: true
      tags:
      - Notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/mark-all-read:
    post:
      operationId: api_notifications_mark_all_read
      description: Mark all user notifications as read and return count of updated
        notifications
      summary: Mark All Notifications as Read
      tags:
      - Notifications
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationStatsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationStatsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationStatsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationMarkAllReadResponse'
          description: ''
  /api/notifications/stats:
    get:
      operationId: api_notifications_stats_retrieve
      description: Retrieve notification statistics for the authenticated user
      summary: Get Notification Statistics
      tags:
      - Notifications
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStatsResponse'
          description: ''
  /api/payments/calculate-options:
    post:
      operationId: api_payments_calculate_options_create
      description: Calculate available payment options (wallet, points, combination)
        for a given scenario
      summary: Calculate Payment Options
      tags:
      - Payments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalculatePaymentOptionsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CalculatePaymentOptionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalculatePaymentOptionsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatePaymentOptions'
          description: ''
  /api/payments/cancel/{intent_id}:
    post:
      operationId: api_payments_cancel_create
      description: Cancel a pending payment intent
      summary: Cancel Payment Intent
      parameters:
      - in: path
        name: intent_id
        schema:
          type: string
        description: Payment Intent ID
        required: true
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
          description: ''
  /api/payments/esewa/failure:
    get:
      operationId: api_payments_esewa_failure_retrieve
      description: Handle eSewa failure callback - Process failure and return response
      summary: eSewa Failure Callback
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/esewa/success:
    get:
      operationId: api_payments_esewa_success_retrieve
      description: Handle eSewa success callback - Process payment and return response
      summary: eSewa Success Callback
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/khalti/callback:
    get:
      operationId: api_payments_khalti_callback_retrieve
      description: Handle Khalti return callback - Process payment and return response
      summary: Khalti Callback
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/methods:
    get:
      operationId: api_payments_methods_retrieve
      description: Retrieve all active payment gateways and their configurations
      summary: Get Payment Methods
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/packages:
    get:
      operationId: api_payments_packages_retrieve
      description: Retrieve all active rental packages with pricing
      summary: Get Rental Packages
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalPackage'
          description: ''
  /api/payments/refunds:
    get:
      operationId: api_payments_refunds_retrieve
      description: Retrieve user's refund requests
      summary: Get User Refunds
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: 'Number of items per page (default: 20)'
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
    post:
      operationId: api_payments_refunds_create
      description: Request a refund for a transaction
      summary: Request Refund
      tags:
      - Payments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundRequestRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
  /api/payments/transactions:
    get:
      operationId: api_payments_transactions_retrieve
      description: Retrieve user's transaction history with optional filtering
      summary: Get Transaction History
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
        description: Filter transactions until this date
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: 'Number of items per page (default: 20)'
      - in: query
        name: start_date
        schema:
          type: string
          format: date
        description: Filter transactions from this date
      - in: query
        name: status
        schema:
          type: string
        description: Filter by status (PENDING, SUCCESS, FAILED, REFUNDED)
      - in: query
        name: transaction_type
        schema:
          type: string
        description: Filter by transaction type (TOPUP, RENTAL, REFUND, etc.)
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/verify:
    post:
      operationId: api_payments_verify_create
      description: Verify payment with gateway and update wallet balance. Supports
        both web and mobile flows.
      summary: Verify Payment
      tags:
      - Payments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyTopupRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTopupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyTopupRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/wallet/balance:
    get:
      operationId: api_payments_wallet_balance_retrieve
      description: Retrieve current user's wallet balance and recent transactions
      summary: Get Wallet Balance
      tags:
      - Payments
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/payments/wallet/topup-intent:
    post:
      operationId: api_payments_wallet_topup_intent_create
      description: Create a payment intent for wallet top-up with selected payment
        method
      summary: Create Top-up Intent
      tags:
      - Payments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopupIntentCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TopupIntentCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopupIntentCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/points/history:
    get:
      operationId: api_points_history_retrieve
      description: Retrieve paginated list of user's points transactions with optional
        filtering
      summary: Get user points transaction history
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: Filter to date (ISO format)
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      - in: query
        name: source
        schema:
          type: string
        description: Filter by source
      - in: query
        name: start_date
        schema:
          type: string
        description: Filter from date (ISO format)
      - in: query
        name: transaction_type
        schema:
          type: string
        description: Filter by transaction type
      tags:
      - Points
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsHistoryResponse'
          description: ''
  /api/points/leaderboard:
    get:
      operationId: api_points_leaderboard_retrieve
      description: Retrieve points leaderboard with optional user inclusion
      summary: Get points leaderboard
      parameters:
      - in: query
        name: include_me
        schema:
          type: boolean
        description: Include authenticated user if not in top list
      - in: query
        name: limit
        schema:
          type: integer
        description: 'Number of top users to return (default: 10)'
      tags:
      - Points
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsLeaderboardResponse'
          description: ''
  /api/points/summary:
    get:
      operationId: api_points_summary_retrieve
      description: Retrieve comprehensive points overview including current balance,
        earnings breakdown, and referral stats
      summary: Get user points summary
      tags:
      - Points
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsSummaryResponse'
          description: ''
  /api/promotions/coupons/active:
    get:
      operationId: get_active_coupons
      description: Returns list of currently active and valid coupons
      summary: Active Coupons
      tags:
      - Promotions
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveCouponsResponse'
          description: ''
  /api/promotions/coupons/apply:
    post:
      operationId: apply_coupon_code
      description: Apply coupon code and receive points
      summary: Apply Coupon Code
      tags:
      - Promotions
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponApplyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CouponApplyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponApplyRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponApplyResponse'
          description: ''
  /api/promotions/coupons/my:
    get:
      operationId: get_my_coupon_history
      description: Returns user's coupon usage history
      summary: My Coupon History
      tags:
      - Promotions
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyCouponsResponse'
          description: ''
  /api/promotions/coupons/validate:
    post:
      operationId: validate_coupon_code
      description: Check if coupon code is valid and can be used
      summary: Validate Coupon Code
      tags:
      - Promotions
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponApplyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CouponApplyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponApplyRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponValidationResponse'
          description: ''
  /api/referrals/claim:
    post:
      operationId: api_referrals_claim_create
      description: Claim referral rewards after completing first rental
      summary: Claim referral rewards
      tags:
      - Points
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReferralClaimRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralClaimRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReferralClaimRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralClaimResponse'
          description: ''
  /api/referrals/my-code:
    get:
      operationId: api_referrals_my_code_retrieve
      description: Retrieve the authenticated user's referral code
      summary: Get user referral code
      tags:
      - Points
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferralCodeResponse'
          description: ''
  /api/referrals/my-referrals:
    get:
      operationId: api_referrals_my_referrals_retrieve
      description: Retrieve referrals sent by the authenticated user
      summary: Get user referrals
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      tags:
      - Points
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferralsResponse'
          description: ''
  /api/referrals/validate:
    get:
      operationId: api_referrals_validate_retrieve
      description: Validate a referral code and return referrer information
      summary: Validate referral code
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: Referral code to validate
        required: true
      tags:
      - Points
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralValidationResponse'
          description: ''
  /api/rentals/{rental_id}/cancel:
    post:
      operationId: api_rentals_cancel_create
      description: Cancel an active rental with optional reason
      summary: Cancel Active Rental
      parameters:
      - in: path
        name: rental_id
        schema:
          type: string
        required: true
      tags:
      - Rentals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentalCancelRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RentalCancelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentalCancelRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/{rental_id}/extend:
    post:
      operationId: api_rentals_extend_create
      description: Extend rental duration by purchasing additional time package
      summary: Extend Rental Duration
      parameters:
      - in: path
        name: rental_id
        schema:
          type: string
        required: true
      tags:
      - Rentals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentalExtensionCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RentalExtensionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentalExtensionCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/{rental_id}/issues:
    post:
      operationId: api_rentals_issues_create
      description: Report an issue with current rental
      summary: Report Rental Issue
      parameters:
      - in: path
        name: rental_id
        schema:
          type: string
        required: true
      tags:
      - Rentals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentalIssueCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RentalIssueCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentalIssueCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/{rental_id}/location:
    post:
      operationId: api_rentals_location_create
      description: Update GPS location for active rental tracking
      summary: Update Rental Location
      parameters:
      - in: path
        name: rental_id
        schema:
          type: string
        required: true
      tags:
      - Rentals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentalLocationUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RentalLocationUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentalLocationUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/{rental_id}/pay-due:
    post:
      operationId: api_rentals_pay_due_create
      description: Settle outstanding rental dues using points and wallet combination
      summary: Settle Rental Dues
      parameters:
      - in: path
        name: rental_id
        schema:
          type: string
        required: true
      tags:
      - Rentals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentalPayDueRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RentalPayDueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentalPayDueRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/active:
    get:
      operationId: api_rentals_active_retrieve
      description: Returns user's current active rental if any
      summary: Get Active Rental
      tags:
      - Rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/history:
    get:
      operationId: api_rentals_history_retrieve
      description: Retrieve user's rental history with optional filtering
      summary: Get Rental History
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
        description: Filter rentals until this date
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of items per page
      - in: query
        name: payment_status
        schema:
          type: string
        description: Filter by payment status
      - in: query
        name: start_date
        schema:
          type: string
          format: date
        description: Filter rentals from this date
      - in: query
        name: status
        schema:
          type: string
        description: Filter by rental status
      tags:
      - Rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/packages:
    get:
      operationId: api_rentals_packages_retrieve
      description: Get list of available rental packages with pagination
      summary: Get Rental Packages
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      tags:
      - Rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/start:
    post:
      operationId: api_rentals_start_create
      description: Start a new power bank rental at specified station with selected
        package
      summary: Start New Rental
      tags:
      - Rentals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentalStartRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RentalStartRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentalStartRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/rentals/stats:
    get:
      operationId: api_rentals_stats_retrieve
      description: Get comprehensive rental statistics for the user
      summary: Get Rental Statistics
      tags:
      - Rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/social/achievements:
    get:
      operationId: api_social_achievements_retrieve
      description: Retrieve all achievements with real-time progress calculation.
        Unlocks achievements when criteria are met.
      summary: Get user achievements (Real-Time)
      tags:
      - Social
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAchievementsResponse'
          description: ''
  /api/social/leaderboard:
    get:
      operationId: api_social_leaderboard_retrieve
      description: Retrieve leaderboard with filtering options
      summary: Get leaderboard
      parameters:
      - in: query
        name: category
        schema:
          type: string
        description: Leaderboard category (overall, rentals, points, referrals, timely_returns)
      - in: query
        name: include_me
        schema:
          type: boolean
        description: Include authenticated user if not in top list
      - in: query
        name: limit
        schema:
          type: integer
        description: Number of entries to return (5-100)
      - in: query
        name: period
        schema:
          type: string
        description: Time period (all_time, monthly, weekly)
      tags:
      - Social
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardResponse'
          description: ''
  /api/social/stats:
    get:
      operationId: api_social_stats_retrieve
      description: Retrieve comprehensive social statistics for the user
      summary: Get social statistics
      tags:
      - Social
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialStatsResponse'
          description: ''
  /api/social/unlock/{achievement_id}:
    post:
      operationId: api_social_unlock_create
      description: Claim an achievement that has been unlocked. Awards points and
        updates leaderboard.
      summary: Claim unlocked achievement
      parameters:
      - in: path
        name: achievement_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Social
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimAchievementResponse'
          description: ''
        '400':
          description: Achievement not unlocked
        '404':
          description: Achievement not found
        '409':
          description: Achievement already claimed
  /api/social/unlock/bulk:
    post:
      operationId: api_social_unlock_bulk_create
      description: Claim multiple unlocked achievements at once
      summary: Claim multiple achievements
      tags:
      - Social
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkClaimRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/BulkClaimRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkClaimRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkClaimResponse'
          description: ''
  /api/stations:
    get:
      operationId: api_stations_list
      description: Get list of active charging stations with basic info and availability
      summary: List Stations
      parameters:
      - in: query
        name: lat
        schema:
          type: number
          format: float
        description: User latitude for distance calculation
      - in: query
        name: lng
        schema:
          type: number
          format: float
        description: User longitude for distance calculation
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page (max 50)
      - in: query
        name: search
        schema:
          type: string
        description: Search by station name or address
      tags:
      - Stations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationListResponse'
          description: ''
  /api/stations/{serial_number}:
    get:
      operationId: api_stations_retrieve
      description: Get detailed station information including slots, amenities, and
        real-time status
      summary: Station Detail
      parameters:
      - in: query
        name: lat
        schema:
          type: number
          format: float
        description: User latitude for distance calculation
      - in: query
        name: lng
        schema:
          type: number
          format: float
        description: User longitude for distance calculation
      - in: path
        name: serial_number
        schema:
          type: string
        description: Station serial number
        required: true
      tags:
      - Stations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetailResponse'
          description: ''
  /api/stations/{serial_number}/favorite:
    post:
      operationId: api_stations_favorite_create
      description: Add or remove station from user's favorites
      summary: Toggle Station Favorite
      parameters:
      - in: path
        name: serial_number
        schema:
          type: string
        description: Station serial number
        required: true
      tags:
      - Stations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationFavoriteResponse'
          description: ''
  /api/stations/{serial_number}/report-issue:
    post:
      operationId: api_stations_report_issue_create
      description: Report problems with a charging station
      summary: Report Station Issue
      parameters:
      - in: path
        name: serial_number
        schema:
          type: string
        description: Station serial number
        required: true
      tags:
      - Stations
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StationIssueCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/StationIssueCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StationIssueCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationIssueResponse'
          description: ''
  /api/stations/favorites:
    get:
      operationId: api_stations_favorites_retrieve
      description: Get user's favorite stations list
      summary: My Favorite Stations
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page (max 50)
      tags:
      - Stations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFavoriteStationsResponse'
          description: ''
  /api/stations/my-reports:
    get:
      operationId: api_stations_my_reports_retrieve
      description: Get issues reported by the authenticated user
      summary: My Issue Reports
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page (max 50)
      tags:
      - Stations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStationReportsResponse'
          description: ''
  /api/stations/nearby:
    get:
      operationId: api_stations_nearby_retrieve
      description: Get stations within specified radius for map display
      summary: Nearby Stations
      parameters:
      - in: query
        name: lat
        schema:
          type: number
          format: float
        description: Latitude
        required: true
      - in: query
        name: lng
        schema:
          type: number
          format: float
        description: Longitude
        required: true
      - in: query
        name: radius
        schema:
          type: number
          format: float
        description: 'Search radius in km (default: 5, max: 20)'
      tags:
      - Stations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationListResponse'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      description: Returns paginated list of all users (Staff only)
      summary: List Users (Admin)
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Items per page
      - in: query
        name: search
        schema:
          type: string
        description: Search by username, email, or phone
      - in: query
        name: status
        schema:
          type: string
        description: Filter by user status
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaginatedResponse'
          description: ''
    post:
      operationId: api_users_create
      description: Creates new user (Staff only)
      summary: Create User (Admin)
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: Retrieves specific user details (Staff only)
      summary: Get User (Admin)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    put:
      operationId: api_users_update
      description: Updates user information (Staff only)
      summary: Update User (Admin)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    patch:
      operationId: api_users_partial_update
      description: Partially updates user information (Staff only)
      summary: Partial Update User (Admin)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/users/analytics/usage-stats:
    get:
      operationId: api_users_analytics_usage_stats_retrieve
      description: Provides real-time usage statistics and analytics
      summary: User Analytics
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/users/kyc:
    post:
      operationId: api_users_kyc_create
      description: Upload KYC documents for verification
      summary: KYC Document Submission
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserKYCRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserKYCRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserKYCRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    patch:
      operationId: api_users_kyc_partial_update
      description: Upload KYC documents for verification
      summary: KYC Document Submission
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserKYCRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserKYCRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserKYCRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/users/kyc/status:
    get:
      operationId: api_users_kyc_status_retrieve
      description: Returns real-time KYC verification status
      summary: KYC Status
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/users/profile:
    get:
      operationId: api_users_profile_retrieve
      description: Get and update user profile with real-time data
      summary: User Profile Management
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    put:
      operationId: api_users_profile_update
      description: Get and update user profile with real-time data
      summary: User Profile Management
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
    patch:
      operationId: api_users_profile_partial_update
      description: Get and update user profile with real-time data
      summary: User Profile Management
      tags:
      - Authentication
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
  /api/users/wallet:
    get:
      operationId: api_users_wallet_retrieve
      description: Display real-time wallet balance and points
      summary: User Wallet
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: ''
components:
  schemas:
    AchievementAnalytics:
      type: object
      description: Serializer for achievement analytics (Admin)
      properties:
        total_achievements:
          type: integer
        active_achievements:
          type: integer
        total_unlocks:
          type: integer
        most_unlocked:
          type: array
          items: {}
        least_unlocked:
          type: array
          items: {}
        unlock_rate_by_achievement:
          type: array
          items: {}
        users_with_achievements:
          type: integer
        average_achievements_per_user:
          type: number
          format: double
        last_updated:
          type: string
          format: date-time
      required:
      - active_achievements
      - average_achievements_per_user
      - last_updated
      - least_unlocked
      - most_unlocked
      - total_achievements
      - total_unlocks
      - unlock_rate_by_achievement
      - users_with_achievements
    AchievementAnalyticsResponse:
      type: object
      description: Response serializer for achievement analytics endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/AchievementAnalytics'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    AchievementClaimData:
      type: object
      properties:
        achievement:
          $ref: '#/components/schemas/UserAchievement'
        points_awarded:
          type: integer
        new_rank:
          type: integer
          nullable: true
        total_points:
          type: integer
      required:
      - achievement
      - new_rank
      - points_awarded
      - total_points
    AchievementCreateRequest:
      type: object
      description: Serializer for creating achievements (Admin)
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        criteria_type:
          enum:
          - rental_count
          - timely_return_count
          - referral_count
          type: string
          description: |-
            * `rental_count` - Rental Count
            * `timely_return_count` - Timely Return Count
            * `referral_count` - Referral Count
          x-spec-enum-id: 6f4ac9acca98c855
        criteria_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reward_type:
          enum:
          - points
          type: string
          description: '* `points` - Points'
          x-spec-enum-id: 018b807dc240153c
        reward_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_active:
          type: boolean
      required:
      - criteria_type
      - criteria_value
      - description
      - name
      - reward_type
      - reward_value
    AchievementCreateResponse:
      type: object
      description: Response serializer for achievement creation endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/AchievementDetail'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    AchievementDetail:
      type: object
      description: Detailed serializer for achievements - Full data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        criteria_type:
          enum:
          - rental_count
          - timely_return_count
          - referral_count
          type: string
          description: |-
            * `rental_count` - Rental Count
            * `timely_return_count` - Timely Return Count
            * `referral_count` - Referral Count
          x-spec-enum-id: 6f4ac9acca98c855
        criteria_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reward_type:
          enum:
          - points
          type: string
          description: '* `points` - Points'
          x-spec-enum-id: 018b807dc240153c
        reward_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_active:
          type: boolean
        progress_percentage:
          type: number
          format: double
          readOnly: true
        user_progress:
          type: integer
          readOnly: true
        is_user_unlocked:
          type: boolean
          readOnly: true
      required:
      - criteria_type
      - criteria_value
      - description
      - id
      - is_user_unlocked
      - name
      - progress_percentage
      - reward_type
      - reward_value
      - user_progress
    ActiveCouponsResponse:
      type: object
      description: Response serializer for active coupons endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/CouponPublic'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    AdjustmentData:
      type: object
      properties:
        transaction_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        points_adjusted:
          type: integer
        adjustment_type:
          type: string
        new_balance:
          type: integer
      required:
      - adjustment_type
      - new_balance
      - points_adjusted
      - transaction_id
      - user_id
    AdminProfile:
      type: object
      description: Serializer for admin profiles
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        role:
          enum:
          - super_admin
          - admin
          - moderator
          type: string
          description: |-
            * `super_admin` - Super Admin
            * `admin` - Admin
            * `moderator` - Moderator
          x-spec-enum-id: 83639cce3f1e597a
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        created_by_username:
          type: string
          readOnly: true
      required:
      - created_at
      - created_by_username
      - email
      - id
      - role
      - updated_at
      - username
    AdminProfileRequest:
      type: object
      description: Serializer for admin profiles
      properties:
        role:
          enum:
          - super_admin
          - admin
          - moderator
          type: string
          description: |-
            * `super_admin` - Super Admin
            * `admin` - Admin
            * `moderator` - Moderator
          x-spec-enum-id: 83639cce3f1e597a
        is_active:
          type: boolean
      required:
      - role
    AppConfigRequest:
      type: object
      description: Serializer for AppConfig model
      properties:
        key:
          type: string
          minLength: 1
          maxLength: 100
        value:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
          maxLength: 255
        is_active:
          type: boolean
      required:
      - key
      - value
    AppInitData:
      type: object
      description: Serializer for app initialization data
      properties:
        configs:
          type: object
          additionalProperties: {}
        countries:
          type: array
          items: {}
        constants:
          type: object
          additionalProperties: {}
        app_version:
          type: string
        api_version:
          type: string
      required:
      - api_version
      - app_version
      - configs
      - constants
      - countries
    AppUpdateRequest:
      type: object
      description: Serializer for AppUpdate model
      properties:
        version:
          type: string
          minLength: 1
          maxLength: 255
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        features: {}
        is_major:
          type: boolean
        released_at:
          type: string
          format: date-time
      required:
      - description
      - released_at
      - title
      - version
    AppVersionCheckRequest:
      type: object
      description: Serializer for app version check requests
      properties:
        platform:
          enum:
          - android
          - ios
          type: string
          description: |-
            * `android` - Android
            * `ios` - iOS
          x-spec-enum-id: e5d7131df7d30991
        current_version:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - current_version
      - platform
    AppVersionRequest:
      type: object
      description: Serializer for AppVersion model
      properties:
        version:
          type: string
          minLength: 1
          maxLength: 255
        platform:
          enum:
          - android
          - ios
          type: string
          description: |-
            * `android` - Android
            * `ios` - iOS
          x-spec-enum-id: e5d7131df7d30991
        is_mandatory:
          type: boolean
        download_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        release_notes:
          type: string
          minLength: 1
        released_at:
          type: string
          format: date-time
      required:
      - download_url
      - platform
      - release_notes
      - released_at
      - version
    BaseResponse:
      type: object
      description: Standard response format for all API endpoints
      properties:
        success:
          type: boolean
        message:
          type: string
        data: {}
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    BulkAwardData:
      type: object
      properties:
        total_users:
          type: integer
        awarded_count:
          type: integer
        failed_count:
          type: integer
        total_points_awarded:
          type: integer
      required:
      - awarded_count
      - failed_count
      - total_points_awarded
      - total_users
    BulkClaimData:
      type: object
      properties:
        claimed_count:
          type: integer
        failed_count:
          type: integer
        total_points_awarded:
          type: integer
        achievements:
          type: array
          items:
            $ref: '#/components/schemas/UserAchievement'
        failed_claims:
          type: array
          items:
            $ref: '#/components/schemas/FailedClaim'
      required:
      - achievements
      - claimed_count
      - failed_claims
      - failed_count
      - total_points_awarded
    BulkClaimRequest:
      type: object
      description: Serializer for bulk achievement claiming
      properties:
        achievement_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of UserAchievement IDs (not Achievement IDs) to claim.
            These are the IDs from the achievements endpoint.
          maxItems: 50
          minItems: 1
      required:
      - achievement_ids
    BulkClaimResponse:
      type: object
      description: Response serializer for bulk claim endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/BulkClaimData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    BulkPointsAwardRequest:
      type: object
      description: Serializer for bulk points award (Admin)
      properties:
        user_ids:
          type: array
          items:
            type: string
            format: uuid
          maxItems: 100
        points:
          type: integer
          maximum: 1000
          minimum: 1
        source:
          enum:
          - SIGNUP
          - REFERRAL_INVITER
          - REFERRAL_INVITEE
          - TOPUP
          - RENTAL_COMPLETE
          - TIMELY_RETURN
          - COUPON
          - RENTAL_PAYMENT
          - ADMIN_ADJUSTMENT
          type: string
          description: |-
            * `SIGNUP` - Signup
            * `REFERRAL_INVITER` - Referral Inviter
            * `REFERRAL_INVITEE` - Referral Invitee
            * `TOPUP` - Top Up
            * `RENTAL_COMPLETE` - Rental Complete
            * `TIMELY_RETURN` - Timely Return
            * `COUPON` - Coupon
            * `RENTAL_PAYMENT` - Rental Payment
            * `ADMIN_ADJUSTMENT` - Admin Adjustment
          x-spec-enum-id: 2d8cfaa0761b0649
        description:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - description
      - points
      - source
      - user_ids
    BulkPointsAwardResponse:
      type: object
      description: Response serializer for bulk points award endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/BulkAwardData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    CalculatePaymentOptions:
      type: object
      description: Serializer for calculating payment options
      properties:
        scenario:
          enum:
          - wallet_topup
          - pre_payment
          - post_payment
          type: string
          description: |-
            * `wallet_topup` - Wallet Top-up
            * `pre_payment` - Pre-payment
            * `post_payment` - Post-payment
          x-spec-enum-id: 7fd36083d2f23707
        package_id:
          type: string
          format: uuid
          nullable: true
        rental_id:
          type: string
          format: uuid
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - scenario
    CalculatePaymentOptionsRequest:
      type: object
      description: Serializer for calculating payment options
      properties:
        scenario:
          enum:
          - wallet_topup
          - pre_payment
          - post_payment
          type: string
          description: |-
            * `wallet_topup` - Wallet Top-up
            * `pre_payment` - Pre-payment
            * `post_payment` - Post-payment
          x-spec-enum-id: 7fd36083d2f23707
        package_id:
          type: string
          format: uuid
          nullable: true
        rental_id:
          type: string
          format: uuid
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - scenario
    ClaimAchievementResponse:
      type: object
      description: Response serializer for achievement claim endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/AchievementClaimData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    ClaimData:
      type: object
      properties:
        points_awarded:
          type: integer
        referral_id:
          type: string
          format: uuid
        completed_at:
          type: string
          format: date-time
      required:
      - completed_at
      - points_awarded
      - referral_id
    ContentPageRequest:
      type: object
      description: Serializer for content pages
      properties:
        page_type:
          enum:
          - terms-of-service
          - privacy-policy
          - about
          - contact
          - faq
          type: string
          description: |-
            * `terms-of-service` - Terms of Service
            * `privacy-policy` - Privacy Policy
            * `about` - About Us
            * `contact` - Contact Us
            * `faq` - FAQ
          x-spec-enum-id: 49c8bca8a6b557c6
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
          minLength: 1
        is_active:
          type: boolean
      required:
      - content
      - page_type
      - title
    CountryList:
      type: object
      description: Minimal serializer for country listing
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 10
        dial_code:
          type: string
          maxLength: 10
        flag_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - code
      - dial_code
      - id
      - name
    CouponAnalytics:
      type: object
      description: Serializer for coupon analytics (Admin)
      properties:
        total_coupons:
          type: integer
        active_coupons:
          type: integer
        expired_coupons:
          type: integer
        total_uses:
          type: integer
        total_points_awarded:
          type: integer
        most_used_coupons:
          type: array
          items: {}
        daily_usage:
          type: array
          items: {}
        unique_users:
          type: integer
        average_uses_per_user:
          type: number
          format: double
        last_updated:
          type: string
          format: date-time
      required:
      - active_coupons
      - average_uses_per_user
      - daily_usage
      - expired_coupons
      - last_updated
      - most_used_coupons
      - total_coupons
      - total_points_awarded
      - total_uses
      - unique_users
    CouponAnalyticsResponse:
      type: object
      description: Response serializer for coupon analytics endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/CouponAnalytics'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    CouponApplyData:
      type: object
      properties:
        success:
          type: boolean
        coupon_code:
          type: string
        coupon_name:
          type: string
        points_awarded:
          type: integer
        message:
          type: string
      required:
      - coupon_code
      - coupon_name
      - message
      - points_awarded
      - success
    CouponApplyRequest:
      type: object
      description: Serializer for applying coupons
      properties:
        coupon_code:
          type: string
          minLength: 1
          maxLength: 10
      required:
      - coupon_code
    CouponApplyResponse:
      type: object
      description: Response serializer for coupon apply endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/CouponApplyData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    CouponCreate:
      type: object
      description: Serializer for creating coupons (Admin)
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
      required:
      - code
      - name
      - points_value
      - valid_from
      - valid_until
    CouponCreateRequest:
      type: object
      description: Serializer for creating coupons (Admin)
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 10
        name:
          type: string
          minLength: 1
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
      required:
      - code
      - name
      - points_value
      - valid_from
      - valid_until
    CouponDetail:
      type: object
      description: Detailed serializer for coupons - Full data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_currently_valid:
          type: boolean
          readOnly: true
        days_remaining:
          type: integer
          readOnly: true
        total_uses:
          type: integer
          readOnly: true
      required:
      - code
      - created_at
      - days_remaining
      - id
      - is_currently_valid
      - name
      - points_value
      - total_uses
      - valid_from
      - valid_until
    CouponDetailRequest:
      type: object
      description: Detailed serializer for coupons - Full data
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 10
        name:
          type: string
          minLength: 1
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
      required:
      - code
      - name
      - points_value
      - valid_from
      - valid_until
    CouponFilter:
      type: object
      description: Serializer for coupon filtering
      properties:
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
        search:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        page:
          type: integer
          minimum: 1
          default: 1
        page_size:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
    CouponFilterRequest:
      type: object
      description: Serializer for coupon filtering
      properties:
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
        search:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        page:
          type: integer
          minimum: 1
          default: 1
        page_size:
          type: integer
          maximum: 100
          minimum: 1
          default: 20
    CouponPublic:
      type: object
      description: Public serializer for active coupons - inherits from list serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_until:
          type: string
          format: date-time
        is_currently_valid:
          type: boolean
          readOnly: true
        days_remaining:
          type: integer
          readOnly: true
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - code
      - days_remaining
      - id
      - is_currently_valid
      - name
      - points_value
      - valid_until
    CouponUpdate:
      type: object
      description: Serializer for updating coupons (Admin)
      properties:
        name:
          type: string
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
      required:
      - name
      - points_value
      - valid_from
      - valid_until
    CouponUpdateRequest:
      type: object
      description: Serializer for updating coupons (Admin)
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
      required:
      - name
      - points_value
      - valid_from
      - valid_until
    CouponValidation:
      type: object
      description: Serializer for coupon validation response
      properties:
        valid:
          type: boolean
        coupon_code:
          type: string
        points_value:
          type: integer
        message:
          type: string
        can_use:
          type: boolean
        uses_remaining:
          type: integer
      required:
      - can_use
      - coupon_code
      - message
      - points_value
      - uses_remaining
      - valid
    CouponValidationResponse:
      type: object
      description: Response serializer for coupon validation endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/CouponValidation'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    FailedClaim:
      type: object
      description: Serializer for failed achievement claims
      properties:
        achievement_id:
          type: string
          format: uuid
        error:
          type: string
        code:
          type: string
      required:
      - achievement_id
      - code
      - error
    LeaderboardData:
      type: object
      properties:
        leaderboard:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardEntryList'
        user_entry:
          allOf:
          - $ref: '#/components/schemas/UserLeaderboard'
          nullable: true
        category:
          type: string
        period:
          type: string
        total_users:
          type: integer
      required:
      - category
      - leaderboard
      - period
      - total_users
      - user_entry
    LeaderboardEntryList:
      type: object
      description: Minimal serializer for leaderboard entries - MVP optimized
      properties:
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        username:
          type: string
          readOnly: true
        total_points_earned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_rentals:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - rank
      - username
    LeaderboardResponse:
      type: object
      description: Response serializer for leaderboard endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/LeaderboardData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    MarkAllReadData:
      type: object
      properties:
        message:
          type: string
        updated_count:
          type: integer
      required:
      - message
      - updated_count
    MediaUpload:
      type: object
      description: Serializer for MediaUpload model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file_url:
          type: string
          format: uri
          maxLength: 200
        file_type:
          enum:
          - IMAGE
          - VIDEO
          - DOCUMENT
          type: string
          description: |-
            * `IMAGE` - Image
            * `VIDEO` - Video
            * `DOCUMENT` - Document
          x-spec-enum-id: 7ef6abb5f6ca0d8f
        original_name:
          type: string
          maxLength: 255
        file_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        uploaded_by:
          type: integer
          readOnly: true
          nullable: true
        cloud_provider:
          type: string
          readOnly: true
        public_id:
          type: string
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cloud_provider
      - created_at
      - file_size
      - file_type
      - file_url
      - id
      - original_name
      - public_id
      - updated_at
      - uploaded_by
    MediaUploadCreate:
      type: object
      description: Serializer for creating media uploads
      properties:
        file:
          type: string
          format: uri
          pattern: (?:jpg|jpeg|png|gif|mp4|mov|pdf|doc|docx)$
        file_type:
          enum:
          - IMAGE
          - VIDEO
          - DOCUMENT
          type: string
          description: |-
            * `IMAGE` - Image
            * `VIDEO` - Video
            * `DOCUMENT` - Document
          x-spec-enum-id: 7ef6abb5f6ca0d8f
      required:
      - file
      - file_type
    MediaUploadCreateRequest:
      type: object
      description: Serializer for creating media uploads
      properties:
        file:
          type: string
          format: binary
          pattern: (?:jpg|jpeg|png|gif|mp4|mov|pdf|doc|docx)$
        file_type:
          enum:
          - IMAGE
          - VIDEO
          - DOCUMENT
          type: string
          description: |-
            * `IMAGE` - Image
            * `VIDEO` - Video
            * `DOCUMENT` - Document
          x-spec-enum-id: 7ef6abb5f6ca0d8f
      required:
      - file
      - file_type
    MyCouponsData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserCouponHistory'
        pagination:
          type: object
          additionalProperties: {}
      required:
      - pagination
      - results
    MyCouponsResponse:
      type: object
      description: Response serializer for my coupons endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/MyCouponsData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    NotificationDetail:
      type: object
      description: Detailed serializer for notifications - Full data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        notification_type:
          enum:
          - rental
          - payment
          - promotion
          - system
          - achievement
          - points
          - otp_sms
          - otp_email
          type: string
          description: |-
            * `rental` - Rental
            * `payment` - Payment
            * `promotion` - Promotion
            * `system` - System
            * `achievement` - Achievement
            * `points` - Points
            * `otp_sms` - OTP SMS
            * `otp_email` - OTP Email
          x-spec-enum-id: 56588618c10b89b2
        data: {}
        channel:
          enum:
          - in_app
          - push
          - sms
          - email
          type: string
          description: |-
            * `in_app` - In App
            * `push` - Push
            * `sms` - SMS
            * `email` - Email
          x-spec-enum-id: 9cd90b2af693ae89
        is_read:
          type: boolean
        read_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        time_ago:
          type: string
          readOnly: true
        is_recent:
          type: boolean
          readOnly: true
      required:
      - channel
      - created_at
      - id
      - is_recent
      - message
      - notification_type
      - time_ago
      - title
    NotificationDetailResponse:
      type: object
      description: Response serializer for notification detail endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/NotificationDetail'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    NotificationList:
      type: object
      description: Minimal serializer for notification lists - MVP optimized
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        notification_type:
          enum:
          - rental
          - payment
          - promotion
          - system
          - achievement
          - points
          - otp_sms
          - otp_email
          type: string
          description: |-
            * `rental` - Rental
            * `payment` - Payment
            * `promotion` - Promotion
            * `system` - System
            * `achievement` - Achievement
            * `points` - Points
            * `otp_sms` - OTP SMS
            * `otp_email` - OTP Email
          x-spec-enum-id: 56588618c10b89b2
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        time_ago:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - notification_type
      - time_ago
      - title
    NotificationListData:
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationList'
        pagination:
          type: object
          additionalProperties: {}
      required:
      - notifications
      - pagination
    NotificationListResponse:
      type: object
      description: Response serializer for notification list endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/NotificationListData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    NotificationMarkAllReadResponse:
      type: object
      description: Response serializer for mark all read endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/MarkAllReadData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    NotificationStats:
      type: object
      description: Serializer for notification statistics
      properties:
        total_notifications:
          type: integer
        unread_count:
          type: integer
        read_count:
          type: integer
        notifications_today:
          type: integer
        notifications_this_week:
          type: integer
        notifications_this_month:
          type: integer
        rental_notifications:
          type: integer
        payment_notifications:
          type: integer
        promotion_notifications:
          type: integer
        system_notifications:
          type: integer
        achievement_notifications:
          type: integer
        in_app_notifications:
          type: integer
        push_notifications:
          type: integer
        sms_notifications:
          type: integer
        email_notifications:
          type: integer
      required:
      - achievement_notifications
      - email_notifications
      - in_app_notifications
      - notifications_this_month
      - notifications_this_week
      - notifications_today
      - payment_notifications
      - promotion_notifications
      - push_notifications
      - read_count
      - rental_notifications
      - sms_notifications
      - system_notifications
      - total_notifications
      - unread_count
    NotificationStatsRequest:
      type: object
      description: Serializer for notification statistics
      properties:
        total_notifications:
          type: integer
        unread_count:
          type: integer
        read_count:
          type: integer
        notifications_today:
          type: integer
        notifications_this_week:
          type: integer
        notifications_this_month:
          type: integer
        rental_notifications:
          type: integer
        payment_notifications:
          type: integer
        promotion_notifications:
          type: integer
        system_notifications:
          type: integer
        achievement_notifications:
          type: integer
        in_app_notifications:
          type: integer
        push_notifications:
          type: integer
        sms_notifications:
          type: integer
        email_notifications:
          type: integer
      required:
      - achievement_notifications
      - email_notifications
      - in_app_notifications
      - notifications_this_month
      - notifications_this_week
      - notifications_today
      - payment_notifications
      - promotion_notifications
      - push_notifications
      - read_count
      - rental_notifications
      - sms_notifications
      - system_notifications
      - total_notifications
      - unread_count
    NotificationStatsResponse:
      type: object
      description: Response serializer for notification stats endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/NotificationStats'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    NotificationUpdateRequest:
      type: object
      description: Serializer for updating notification (mark as read)
      properties:
        is_read:
          type: boolean
    OTPRequestRequest:
      type: object
      description: Serializer for OTP request
      properties:
        identifier:
          type: string
          minLength: 1
          description: Email or phone number
        purpose:
          enum:
          - REGISTER
          - LOGIN
          type: string
          description: |-
            * `REGISTER` - REGISTER
            * `LOGIN` - LOGIN
          x-spec-enum-id: 5460c80c127fa7b3
      required:
      - identifier
      - purpose
    OTPVerificationRequest:
      type: object
      description: Serializer for OTP verification
      properties:
        identifier:
          type: string
          minLength: 1
          description: Email or phone number
        otp:
          type: string
          minLength: 6
          maxLength: 6
        purpose:
          enum:
          - REGISTER
          - LOGIN
          type: string
          description: |-
            * `REGISTER` - REGISTER
            * `LOGIN` - LOGIN
          x-spec-enum-id: 5460c80c127fa7b3
      required:
      - identifier
      - otp
      - purpose
    PaginatedResponse:
      type: object
      description: Standard paginated response format
      properties:
        success:
          type: boolean
        message:
          type: string
        data: {}
        pagination:
          type: object
          additionalProperties: {}
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - pagination
      - success
      - timestamp
    PatchedCouponUpdateRequest:
      type: object
      description: Serializer for updating coupons (Admin)
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        points_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        status:
          enum:
          - active
          - inactive
          - expired
          type: string
          description: |-
            * `active` - Active
            * `inactive` - Inactive
            * `expired` - Expired
          x-spec-enum-id: 4329db699d4de141
    PatchedStationUpdateRequest:
      type: object
      description: Serializer for updating stations (Admin only)
      properties:
        station_name:
          type: string
          minLength: 1
          maxLength: 100
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        address:
          type: string
          minLength: 1
          maxLength: 255
        landmark:
          type: string
          nullable: true
          maxLength: 255
        total_slots:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
          type: string
          description: |-
            * `ONLINE` - Online
            * `OFFLINE` - Offline
            * `MAINTENANCE` - Maintenance
          x-spec-enum-id: b4a3d9b4a10c8604
        is_maintenance:
          type: boolean
        hardware_info: {}
    PatchedUserDetailRequest:
      type: object
      description: Detailed user serializer with full profile data
      properties:
        username:
          type: string
          nullable: true
          maxLength: 150
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        profile_picture:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        social_provider:
          enum:
          - EMAIL
          - PHONE
          - GOOGLE
          - APPLE
          type: string
          x-spec-enum-id: 5880d1008acb378f
          description: |-
            Primary authentication method used by the user

            * `EMAIL` - Email
            * `PHONE` - Phone
            * `GOOGLE` - Google
            * `APPLE` - Apple
        social_profile_data: {}
    PatchedUserKYCRequest:
      type: object
      description: Serializer for user KYC
      properties:
        document_type:
          type: string
          minLength: 1
          maxLength: 50
        document_number:
          type: string
          minLength: 1
          maxLength: 100
        document_front_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        document_back_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
    PatchedUserProfileRequest:
      type: object
      description: Serializer for user profile
      properties:
        full_name:
          type: string
          nullable: true
          maxLength: 255
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
          nullable: true
          maxLength: 255
        avatar_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
    PaymentStatus:
      type: object
      description: Serializer for payment status response
      properties:
        intent_id:
          type: string
        status:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
        gateway_reference:
          type: string
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        failure_reason:
          type: string
          nullable: true
      required:
      - amount
      - completed_at
      - currency
      - failure_reason
      - gateway_reference
      - intent_id
      - status
    PointsAdjustmentRequest:
      type: object
      description: Serializer for admin points adjustment
      properties:
        user_id:
          type: string
          format: uuid
        points:
          type: integer
        reason:
          type: string
          minLength: 1
          maxLength: 255
        adjustment_type:
          enum:
          - ADD
          - DEDUCT
          type: string
          description: |-
            * `ADD` - Add
            * `DEDUCT` - Deduct
          x-spec-enum-id: 10151564d63ccc75
      required:
      - adjustment_type
      - points
      - reason
      - user_id
    PointsAdjustmentResponse:
      type: object
      description: Response serializer for points adjustment endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/AdjustmentData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    PointsHistoryData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PointsTransactionList'
        pagination:
          type: object
          additionalProperties: {}
      required:
      - pagination
      - results
    PointsHistoryResponse:
      type: object
      description: Response serializer for points history endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/PointsHistoryData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    PointsLeaderboardList:
      type: object
      description: Minimal serializer for leaderboard lists - MVP optimized
      properties:
        rank:
          type: integer
        username:
          type: string
        total_points:
          type: integer
        points_this_month:
          type: integer
      required:
      - points_this_month
      - rank
      - total_points
      - username
    PointsLeaderboardResponse:
      type: object
      description: Response serializer for points leaderboard endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PointsLeaderboardList'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    PointsSummary:
      type: object
      description: Serializer for comprehensive points overview
      properties:
        current_points:
          type: integer
        total_points_earned:
          type: integer
        total_points_spent:
          type: integer
        points_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        points_from_signup:
          type: integer
        points_from_referrals:
          type: integer
        points_from_topups:
          type: integer
        points_from_rentals:
          type: integer
        points_from_timely_returns:
          type: integer
        points_from_coupons:
          type: integer
        recent_transactions_count:
          type: integer
        last_earned_date:
          type: string
          format: date-time
          nullable: true
        last_spent_date:
          type: string
          format: date-time
          nullable: true
        total_referrals_sent:
          type: integer
        successful_referrals:
          type: integer
        pending_referrals:
          type: integer
        referral_points_earned:
          type: integer
      required:
      - current_points
      - last_earned_date
      - last_spent_date
      - pending_referrals
      - points_from_coupons
      - points_from_referrals
      - points_from_rentals
      - points_from_signup
      - points_from_timely_returns
      - points_from_topups
      - points_value
      - recent_transactions_count
      - referral_points_earned
      - successful_referrals
      - total_points_earned
      - total_points_spent
      - total_referrals_sent
    PointsSummaryResponse:
      type: object
      description: Response serializer for points summary endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/PointsSummary'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    PointsTransactionList:
      type: object
      description: Minimal serializer for points transaction lists - MVP optimized
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        transaction_type:
          enum:
          - EARNED
          - SPENT
          - ADJUSTMENT
          type: string
          description: |-
            * `EARNED` - Earned
            * `SPENT` - Spent
            * `ADJUSTMENT` - Adjustment
          x-spec-enum-id: 0f8b66a3f4b66e54
        source:
          enum:
          - SIGNUP
          - REFERRAL_INVITER
          - REFERRAL_INVITEE
          - TOPUP
          - RENTAL_COMPLETE
          - TIMELY_RETURN
          - COUPON
          - RENTAL_PAYMENT
          - ADMIN_ADJUSTMENT
          type: string
          description: |-
            * `SIGNUP` - Signup
            * `REFERRAL_INVITER` - Referral Inviter
            * `REFERRAL_INVITEE` - Referral Invitee
            * `TOPUP` - Top Up
            * `RENTAL_COMPLETE` - Rental Complete
            * `TIMELY_RETURN` - Timely Return
            * `COUPON` - Coupon
            * `RENTAL_PAYMENT` - Rental Payment
            * `ADMIN_ADJUSTMENT` - Admin Adjustment
          x-spec-enum-id: 2d8cfaa0761b0649
        points:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        formatted_points:
          type: string
          readOnly: true
      required:
      - created_at
      - description
      - formatted_points
      - id
      - points
      - source
      - transaction_type
    ReferralAnalytics:
      type: object
      description: Serializer for referral analytics
      properties:
        total_referrals:
          type: integer
        successful_referrals:
          type: integer
        pending_referrals:
          type: integer
        expired_referrals:
          type: integer
        conversion_rate:
          type: number
          format: double
        total_points_awarded:
          type: integer
        average_time_to_complete:
          type: number
          format: double
        top_referrers:
          type: array
          items: {}
        monthly_breakdown:
          type: array
          items: {}
      required:
      - average_time_to_complete
      - conversion_rate
      - expired_referrals
      - monthly_breakdown
      - pending_referrals
      - successful_referrals
      - top_referrers
      - total_points_awarded
      - total_referrals
    ReferralAnalyticsResponse:
      type: object
      description: Response serializer for referral analytics endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/ReferralAnalytics'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    ReferralClaimRequest:
      type: object
      description: Serializer for claiming referral rewards
      properties:
        referral_id:
          type: string
          format: uuid
      required:
      - referral_id
    ReferralClaimResponse:
      type: object
      description: Response serializer for referral claim endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/ClaimData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    ReferralCodeData:
      type: object
      properties:
        referral_code:
          type: string
        user_id:
          type: string
          format: uuid
        username:
          type: string
      required:
      - referral_code
      - user_id
      - username
    ReferralList:
      type: object
      description: Minimal serializer for referral lists - MVP optimized
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          enum:
          - PENDING
          - COMPLETED
          - EXPIRED
          type: string
          description: |-
            * `PENDING` - Pending
            * `COMPLETED` - Completed
            * `EXPIRED` - Expired
          x-spec-enum-id: d8f986694ca5f288
        invitee_username:
          type: string
          readOnly: true
        inviter_points_awarded:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
      required:
      - created_at
      - id
      - invitee_username
      - is_expired
    ReferralValidationResponse:
      type: object
      description: Response serializer for referral validation endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/ValidationData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    Refund:
      type: object
      description: Serializer for refunds
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        reason:
          type: string
          maxLength: 255
        status:
          enum:
          - REQUESTED
          - APPROVED
          - REJECTED
          - PROCESSED
          type: string
          description: |-
            * `REQUESTED` - Requested
            * `APPROVED` - Approved
            * `REJECTED` - Rejected
            * `PROCESSED` - Processed
          x-spec-enum-id: 0d007df1e54de36a
        gateway_reference:
          type: string
          nullable: true
          maxLength: 255
        requested_at:
          type: string
          format: date-time
          readOnly: true
        processed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        requested_by_name:
          type: string
          readOnly: true
        approved_by_name:
          type: string
          readOnly: true
        formatted_amount:
          type: string
          readOnly: true
      required:
      - amount
      - approved_by_name
      - formatted_amount
      - id
      - processed_at
      - reason
      - requested_at
      - requested_by_name
    RefundActionRequest:
      type: object
      description: Serializer for refund action (approve/reject)
      properties:
        refund_id:
          type: string
          format: uuid
      required:
      - refund_id
    RefundRejectRequest:
      type: object
      description: Serializer for refund rejection
      properties:
        refund_id:
          type: string
          format: uuid
        rejection_reason:
          type: string
          minLength: 5
      required:
      - refund_id
      - rejection_reason
    RefundRequestRequest:
      type: object
      description: Serializer for refund requests
      properties:
        transaction_id:
          type: string
          minLength: 1
          maxLength: 255
        reason:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - reason
      - transaction_id
    RentalCancelRequest:
      type: object
      description: |-
        Request serializer for rental cancellation.
        Used in: POST /api/rentals/{id}/cancel
      properties:
        reason:
          type: string
          description: Optional cancellation reason
          maxLength: 255
    RentalExtensionCreateRequest:
      type: object
      description: |-
        Request serializer for extending a rental.
        Used in: POST /api/rentals/{id}/extend
      properties:
        package_id:
          type: string
          format: uuid
          description: Extension package ID
      required:
      - package_id
    RentalIssueCreateRequest:
      type: object
      description: |-
        Request serializer for reporting rental issues.
        Used in: POST /api/rentals/{id}/issue
      properties:
        issue_type:
          enum:
          - POWER_BANK_DAMAGED
          - POWER_BANK_LOST
          - CHARGING_ISSUE
          - RETURN_ISSUE
          type: string
          description: |-
            * `POWER_BANK_DAMAGED` - Power Bank Damaged
            * `POWER_BANK_LOST` - Power Bank Lost
            * `CHARGING_ISSUE` - Charging Issue
            * `RETURN_ISSUE` - Return Issue
          x-spec-enum-id: 9d97377ca8c5f924
        description:
          type: string
          minLength: 1
          maxLength: 255
        images: {}
      required:
      - description
      - issue_type
    RentalLocationUpdateRequest:
      type: object
      description: |-
        Request serializer for updating rental location.
        Used in: POST /api/rentals/{id}/location
      properties:
        latitude:
          type: number
          format: double
          description: GPS latitude (-90 to 90)
        longitude:
          type: number
          format: double
          description: GPS longitude (-180 to 180)
        accuracy:
          type: number
          format: double
          default: 10.0
          description: GPS accuracy in meters
      required:
      - latitude
      - longitude
    RentalPackage:
      type: object
      description: Serializer for rental packages
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 255
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        package_type:
          enum:
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          type: string
          description: |-
            * `HOURLY` - Hourly
            * `DAILY` - Daily
            * `WEEKLY` - Weekly
            * `MONTHLY` - Monthly
          x-spec-enum-id: 9e1546a52c56f5bd
        payment_model:
          enum:
          - PREPAID
          - POSTPAID
          type: string
          description: |-
            * `PREPAID` - Prepaid
            * `POSTPAID` - Postpaid
          x-spec-enum-id: 7a3ae01e10e187da
        is_active:
          type: boolean
        duration_display:
          type: string
          readOnly: true
      required:
      - description
      - duration_display
      - duration_minutes
      - id
      - name
      - package_type
      - payment_model
      - price
    RentalPayDueRequest:
      type: object
      description: |-
        Request serializer for paying rental dues.
        Used in: POST /api/rentals/pay-due
        Note: Same structure as calculate-options for settle_dues scenario
      properties:
        scenario:
          enum:
          - settle_dues
          type: string
          x-spec-enum-id: dce4e640f37717d2
          description: |-
            Payment scenario (only settle_dues supported)

            * `settle_dues` - settle_dues
        package_id:
          type: string
          format: uuid
          description: Package ID for settlement
        rental_id:
          type: string
          format: uuid
          description: Rental ID with outstanding dues
      required:
      - package_id
      - rental_id
      - scenario
    RentalStartRequest:
      type: object
      description: |-
        Request serializer for starting a rental.
        Used in: POST /api/rentals/start
      properties:
        station_sn:
          type: string
          minLength: 1
          description: Station serial number where powerbank is picked up
          maxLength: 255
        package_id:
          type: string
          format: uuid
          description: Selected rental package ID
        payment_scenario:
          enum:
          - pre_payment
          - post_payment
          type: string
          x-spec-enum-id: 96b65b92ff822ca5
          description: |-
            Payment timing preference

            * `pre_payment` - pre_payment
            * `post_payment` - post_payment
      required:
      - package_id
      - payment_scenario
      - station_sn
    SocialStats:
      type: object
      description: Serializer for social statistics
      properties:
        total_users:
          type: integer
        total_achievements:
          type: integer
        unlocked_achievements:
          type: integer
        user_rank:
          type: integer
        user_achievements_unlocked:
          type: integer
        user_achievements_total:
          type: integer
        top_rental_user:
          type: object
          additionalProperties: {}
        top_points_user:
          type: object
          additionalProperties: {}
        top_referral_user:
          type: object
          additionalProperties: {}
        recent_achievements:
          type: array
          items: {}
      required:
      - recent_achievements
      - top_points_user
      - top_referral_user
      - top_rental_user
      - total_achievements
      - total_users
      - unlocked_achievements
      - user_achievements_total
      - user_achievements_unlocked
      - user_rank
    SocialStatsResponse:
      type: object
      description: Response serializer for social stats endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/SocialStats'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    StationAmenity:
      type: object
      description: Serializer for station amenities
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        icon:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        is_active:
          type: boolean
      required:
      - description
      - icon
      - id
      - name
    StationAmenityMapping:
      type: object
      description: Serializer for station amenity mappings
      properties:
        amenity:
          allOf:
          - $ref: '#/components/schemas/StationAmenity'
          readOnly: true
        is_available:
          type: boolean
        notes:
          type: string
          nullable: true
          maxLength: 255
      required:
      - amenity
    StationCreate:
      type: object
      description: Serializer for creating stations (Admin only)
      properties:
        station_name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 255
        imei:
          type: string
          maxLength: 255
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        address:
          type: string
          maxLength: 255
        landmark:
          type: string
          nullable: true
          maxLength: 255
        total_slots:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        hardware_info: {}
      required:
      - address
      - imei
      - latitude
      - longitude
      - serial_number
      - station_name
      - total_slots
    StationCreateRequest:
      type: object
      description: Serializer for creating stations (Admin only)
      properties:
        station_name:
          type: string
          minLength: 1
          maxLength: 100
        serial_number:
          type: string
          minLength: 1
          maxLength: 255
        imei:
          type: string
          minLength: 1
          maxLength: 255
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        address:
          type: string
          minLength: 1
          maxLength: 255
        landmark:
          type: string
          nullable: true
          maxLength: 255
        total_slots:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        hardware_info: {}
      required:
      - address
      - imei
      - latitude
      - longitude
      - serial_number
      - station_name
      - total_slots
    StationDetail:
      type: object
      description: Serializer for station detail view
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        station_name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 255
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        address:
          type: string
          maxLength: 255
        landmark:
          type: string
          nullable: true
          maxLength: 255
        total_slots:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
          type: string
          description: |-
            * `ONLINE` - Online
            * `OFFLINE` - Offline
            * `MAINTENANCE` - Maintenance
          x-spec-enum-id: b4a3d9b4a10c8604
        is_maintenance:
          type: boolean
        last_heartbeat:
          type: string
          format: date-time
          nullable: true
        slots:
          type: array
          items:
            $ref: '#/components/schemas/StationSlot'
          readOnly: true
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/StationAmenityMapping'
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/StationMedia'
          readOnly: true
        available_slots:
          type: integer
          description: Get count of available slots
          readOnly: true
        occupied_slots:
          type: integer
          readOnly: true
        maintenance_slots:
          type: integer
          readOnly: true
        is_favorite:
          type: boolean
          description: Check if station is user's favorite
          readOnly: true
        distance:
          type: number
          format: double
          nullable: true
          description: Calculate distance from user location if provided
          readOnly: true
      required:
      - address
      - amenities
      - available_slots
      - distance
      - id
      - is_favorite
      - latitude
      - longitude
      - maintenance_slots
      - media
      - occupied_slots
      - serial_number
      - slots
      - station_name
      - total_slots
    StationDetailResponse:
      type: object
      description: Response serializer for station detail
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/StationDetail'
      required:
      - data
      - message
      - success
    StationFavoriteResponse:
      type: object
      description: Response serializer for station favorite operations
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          additionalProperties: {}
      required:
      - data
      - message
      - success
    StationIssue:
      type: object
      description: Serializer for station issues
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        station:
          type: string
          format: uuid
        issue_type:
          enum:
          - OFFLINE
          - DAMAGED
          - DIRTY
          - LOCATION_WRONG
          - SLOT_ERROR
          - AMENITY_ISSUE
          type: string
          description: |-
            * `OFFLINE` - Offline
            * `DAMAGED` - Damaged
            * `DIRTY` - Dirty
            * `LOCATION_WRONG` - Location Wrong
            * `SLOT_ERROR` - Slot Error
            * `AMENITY_ISSUE` - Amenity Issue
          x-spec-enum-id: cccca148d3296e03
        description:
          type: string
          maxLength: 255
        images: {}
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
          type: string
          description: |-
            * `LOW` - Low
            * `MEDIUM` - Medium
            * `HIGH` - High
            * `CRITICAL` - Critical
          x-spec-enum-id: 6275acc48c5f5179
        status:
          enum:
          - REPORTED
          - ACKNOWLEDGED
          - IN_PROGRESS
          - RESOLVED
          type: string
          description: |-
            * `REPORTED` - Reported
            * `ACKNOWLEDGED` - Acknowledged
            * `IN_PROGRESS` - In Progress
            * `RESOLVED` - Resolved
          x-spec-enum-id: fe3992806aa99052
        reported_at:
          type: string
          format: date-time
          readOnly: true
        resolved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        reported_by_name:
          type: string
          readOnly: true
        assigned_to_name:
          type: string
          readOnly: true
      required:
      - assigned_to_name
      - description
      - id
      - issue_type
      - reported_at
      - reported_by_name
      - resolved_at
      - station
    StationIssueCreateRequest:
      type: object
      description: Serializer for creating station issues
      properties:
        issue_type:
          enum:
          - OFFLINE
          - DAMAGED
          - DIRTY
          - LOCATION_WRONG
          - SLOT_ERROR
          - AMENITY_ISSUE
          type: string
          description: |-
            * `OFFLINE` - Offline
            * `DAMAGED` - Damaged
            * `DIRTY` - Dirty
            * `LOCATION_WRONG` - Location Wrong
            * `SLOT_ERROR` - Slot Error
            * `AMENITY_ISSUE` - Amenity Issue
          x-spec-enum-id: cccca148d3296e03
        description:
          type: string
          minLength: 1
          maxLength: 255
        images:
          type: array
          items:
            type: string
            format: uri
            minLength: 1
          description: List of image URLs
      required:
      - description
      - issue_type
    StationIssueResponse:
      type: object
      description: Response serializer for station issue creation
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/StationIssue'
      required:
      - data
      - message
      - success
    StationList:
      type: object
      description: Serializer for station list views with essential fields
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        serial_number:
          type: string
          readOnly: true
        station_name:
          type: string
          readOnly: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
          readOnly: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
          readOnly: true
        address:
          type: string
          readOnly: true
        status:
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
          type: string
          description: |-
            * `ONLINE` - Online
            * `OFFLINE` - Offline
            * `MAINTENANCE` - Maintenance
          x-spec-enum-id: b4a3d9b4a10c8604
          readOnly: true
        total_slots:
          type: integer
          readOnly: true
        available_slots:
          type: integer
          description: Get count of available slots
          readOnly: true
        distance:
          type: number
          format: double
          nullable: true
          description: Calculate distance from user location if provided
          readOnly: true
        is_favorite:
          type: boolean
          description: Check if station is user's favorite
          readOnly: true
      required:
      - address
      - available_slots
      - distance
      - id
      - is_favorite
      - latitude
      - longitude
      - serial_number
      - station_name
      - status
      - total_slots
    StationListResponse:
      type: object
      description: Response serializer for station list
      properties:
        count:
          type: integer
        next:
          type: boolean
        previous:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/StationList'
      required:
      - count
      - next
      - previous
      - results
    StationMedia:
      type: object
      description: Serializer for station media
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        media_type:
          enum:
          - IMAGE
          - VIDEO
          - 360_VIEW
          - FLOOR_PLAN
          type: string
          description: |-
            * `IMAGE` - Image
            * `VIDEO` - Video
            * `360_VIEW` - 360 View
            * `FLOOR_PLAN` - Floor Plan
          x-spec-enum-id: 1f282aaf8b27690b
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
        is_primary:
          type: boolean
        media_url:
          type: string
          nullable: true
          readOnly: true
      required:
      - id
      - media_type
      - media_url
    StationSlot:
      type: object
      description: Serializer for station slots
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        slot_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          enum:
          - AVAILABLE
          - OCCUPIED
          - MAINTENANCE
          - ERROR
          type: string
          description: |-
            * `AVAILABLE` - Available
            * `OCCUPIED` - Occupied
            * `MAINTENANCE` - Maintenance
            * `ERROR` - Error
          x-spec-enum-id: c0f52c4f0ecd36f5
        battery_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        last_updated:
          type: string
          format: date-time
          readOnly: true
        current_rental:
          type: string
          format: uuid
          nullable: true
      required:
      - id
      - last_updated
      - slot_number
    StationUpdate:
      type: object
      description: Serializer for updating stations (Admin only)
      properties:
        station_name:
          type: string
          maxLength: 100
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        address:
          type: string
          maxLength: 255
        landmark:
          type: string
          nullable: true
          maxLength: 255
        total_slots:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
          type: string
          description: |-
            * `ONLINE` - Online
            * `OFFLINE` - Offline
            * `MAINTENANCE` - Maintenance
          x-spec-enum-id: b4a3d9b4a10c8604
        is_maintenance:
          type: boolean
        hardware_info: {}
      required:
      - address
      - latitude
      - longitude
      - station_name
      - total_slots
    StationUpdateRequest:
      type: object
      description: Serializer for updating stations (Admin only)
      properties:
        station_name:
          type: string
          minLength: 1
          maxLength: 100
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,6})?$
        address:
          type: string
          minLength: 1
          maxLength: 255
        landmark:
          type: string
          nullable: true
          maxLength: 255
        total_slots:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
          type: string
          description: |-
            * `ONLINE` - Online
            * `OFFLINE` - Offline
            * `MAINTENANCE` - Maintenance
          x-spec-enum-id: b4a3d9b4a10c8604
        is_maintenance:
          type: boolean
        hardware_info: {}
      required:
      - address
      - latitude
      - longitude
      - station_name
      - total_slots
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TopupIntentCreateRequest:
      type: object
      description: Serializer for creating top-up intent
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method_id:
          type: string
          format: uuid
      required:
      - amount
      - payment_method_id
    UserAchievement:
      type: object
      description: Serializer for user achievements
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        achievement_name:
          type: string
          readOnly: true
        achievement_description:
          type: string
          readOnly: true
        criteria_type:
          type: string
          readOnly: true
        criteria_value:
          type: integer
          readOnly: true
        reward_type:
          type: string
          readOnly: true
        reward_value:
          type: integer
          readOnly: true
        current_progress:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_unlocked:
          type: boolean
        unlocked_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_claimed:
          type: boolean
        claimed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        points_awarded:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        progress_percentage:
          type: number
          format: double
          readOnly: true
        can_claim:
          type: boolean
          readOnly: true
      required:
      - achievement_description
      - achievement_name
      - can_claim
      - claimed_at
      - criteria_type
      - criteria_value
      - id
      - progress_percentage
      - reward_type
      - reward_value
      - unlocked_at
    UserAchievementsResponse:
      type: object
      description: Response serializer for user achievements endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserAchievement'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    UserCouponHistory:
      type: object
      description: Serializer for user's coupon usage history - inherits from list
        serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        coupon_code:
          type: string
          readOnly: true
        points_awarded:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        used_at:
          type: string
          format: date-time
          readOnly: true
        coupon_name:
          type: string
          readOnly: true
      required:
      - coupon_code
      - coupon_name
      - id
      - points_awarded
      - used_at
    UserDetailRequest:
      type: object
      description: Detailed user serializer with full profile data
      properties:
        username:
          type: string
          nullable: true
          maxLength: 150
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        profile_picture:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        social_provider:
          enum:
          - EMAIL
          - PHONE
          - GOOGLE
          - APPLE
          type: string
          x-spec-enum-id: 5880d1008acb378f
          description: |-
            Primary authentication method used by the user

            * `EMAIL` - Email
            * `PHONE` - Phone
            * `GOOGLE` - Google
            * `APPLE` - Apple
        social_profile_data: {}
    UserDeviceRequest:
      type: object
      description: Serializer for user device registration
      properties:
        device_id:
          type: string
          minLength: 1
          maxLength: 255
        fcm_token:
          type: string
          minLength: 1
        device_type:
          enum:
          - ANDROID
          - IOS
          - WEB
          type: string
          description: |-
            * `ANDROID` - Android
            * `IOS` - iOS
            * `WEB` - Web
          x-spec-enum-id: 5617f81b72d11de6
        device_name:
          type: string
          nullable: true
          maxLength: 255
        app_version:
          type: string
          nullable: true
          maxLength: 50
        os_version:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
      required:
      - device_id
      - device_type
      - fcm_token
    UserFavoriteStationsResponse:
      type: object
      description: Response serializer for user favorite stations
      properties:
        count:
          type: integer
        next:
          type: boolean
        previous:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/StationList'
      required:
      - count
      - next
      - previous
      - results
    UserKYCRequest:
      type: object
      description: Serializer for user KYC
      properties:
        document_type:
          type: string
          minLength: 1
          maxLength: 50
        document_number:
          type: string
          minLength: 1
          maxLength: 100
        document_front_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        document_back_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - document_front_url
      - document_number
    UserLeaderboard:
      type: object
      description: Serializer for user's own leaderboard position
      properties:
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        username:
          type: string
          readOnly: true
        profile_picture:
          type: string
          format: uri
          readOnly: true
        total_rentals:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_points_earned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        referrals_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        timely_returns:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        achievements_count:
          type: integer
          readOnly: true
        rank_change:
          type: integer
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - achievements_count
      - last_updated
      - profile_picture
      - rank
      - rank_change
      - username
    UserLoginRequest:
      type: object
      description: Serializer for OTP-based user login
      properties:
        identifier:
          type: string
          minLength: 1
          description: Email or phone number
        verification_token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - identifier
      - verification_token
    UserProfileRequest:
      type: object
      description: Serializer for user profile
      properties:
        full_name:
          type: string
          nullable: true
          maxLength: 255
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
          nullable: true
          maxLength: 255
        avatar_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
    UserReferralCodeResponse:
      type: object
      description: Response serializer for user referral code endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/ReferralCodeData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    UserReferralsData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReferralList'
        pagination:
          type: object
          additionalProperties: {}
      required:
      - pagination
      - results
    UserReferralsResponse:
      type: object
      description: Response serializer for user referrals endpoint
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/UserReferralsData'
        timestamp:
          type: string
          format: date-time
      required:
      - data
      - message
      - success
      - timestamp
    UserRegistrationRequest:
      type: object
      description: Serializer for OTP-based user registration
      properties:
        identifier:
          type: string
          minLength: 1
          description: Email or phone number
        username:
          type: string
          maxLength: 150
        referral_code:
          type: string
          maxLength: 10
        verification_token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - identifier
      - verification_token
    UserStationReportsResponse:
      type: object
      description: Response serializer for user station reports
      properties:
        count:
          type: integer
        next:
          type: boolean
        previous:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/StationIssue'
      required:
      - count
      - next
      - previous
      - results
    ValidationData:
      type: object
      properties:
        valid:
          type: boolean
        referrer:
          type: string
        message:
          type: string
      required:
      - message
      - referrer
      - valid
    VerifyTopupRequest:
      type: object
      description: Serializer for verifying top-up payment with callback data
      properties:
        intent_id:
          type: string
          minLength: 1
        callback_data:
          type: string
          nullable: true
        gateway_reference:
          type: string
        data:
          type: string
        pidx:
          type: string
        status:
          type: string
        txnId:
          type: string
      required:
      - intent_id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: App
  description: Core app functionality (health, version, media, countries)
- name: Authentication
  description: User authentication, registration, and profile management
- name: Stations
  description: Charging station discovery, favorites, and issue reporting
- name: Notifications
  description: Real-time user notifications and alerts
- name: Payments
  description: Wallet management, transactions, and payment gateways
- name: Rentals
  description: Power bank rental operations and history
- name: Points
  description: Reward points and referral system
- name: Promotions
  description: Coupon management and promotional campaigns
- name: Social
  description: Social features, achievements, and leaderboards
- name: Content
  description: App content and information pages
- name: Admin
  description: Administrative operations and analytics
